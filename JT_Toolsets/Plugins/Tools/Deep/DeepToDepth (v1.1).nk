Group {
name DeepToDepth
help "This node takes a Deep input and converts it to either a depth.Z or Z pass. This is handy to generate \"clean\" depth passes from CG. "
tile_color 0x60ff
selected true
addUserKnob {20 settings l "Deep To Depth"}
addUserKnob {26 ""}
addUserKnob {83 generate l "depth from deep:" t "Generate the depth from either front or back of the deep.\n\n(usually the front)" M {front back}}
addUserKnob {26 space0 l "" +STARTLINE T " \t"}
addUserKnob {6 depth l "depth.Z - normalised depth" t "This exctracts a depth.Z pass from deep This is a normalised depth pass. " +STARTLINE}
depth true
addUserKnob {6 z l "Z  - real world units" t "This generates a Z-Pass which contains real-world depth values.  " +STARTLINE}
z true
addUserKnob {26 output_1 l "" +STARTLINE T " "}
addUserKnob {6 antialias l anti-aliasing t "The Depth by default is unpremulted, however by ticking anti aliasing on will provide a anti-aliased version of the depth. Ant-aliased if perfect for using the depth for graded. Aliased version is used for defocusing the image. ." +STARTLINE}
antialias true
addUserKnob {26 space00 l "" +STARTLINE T " \t"}
addUserKnob {83 output l "View depth" t "Replaces RGB with the selective channel layer with effect applied." M {Image depth.z Z}}
output Z
addUserKnob {26 title l "" +STARTLINE T "<br><br><font size='5'>\nDeep to Depth\n</font><font color=#000070> v1.1<br>\n"}
addUserKnob {20 helptab l Help}
addUserKnob {26 ""}
addUserKnob {26 setup l "" +STARTLINE T "<font size='5'>Basic Setup</font>"}
addUserKnob {26 ""}
addUserKnob {26 steps l "" +STARTLINE T "<br><strong>1. </br> \nDeep to Depth will generate depth based on <br>deep front or back.\n<br>\n<br><strong>2. </br> \nIt can generate:<br>\n<b>Normalized Depth</b> - values between 0-1, <br>it is Nuke's default format (1/z).\n<br>\n<b>Real World Units</b> -  is distance from camera<br> (e.g CG renders).\n\n</font><font color=#000070>\n<br><br><b>John Toth © 2021 <br>"}
addUserKnob {26 link l "" +STARTLINE T "<a href=\"https://johntothvfx.com\"><span style=\"color:#000070\">johntothvfx.com</a>\n"}
addUserKnob {26 space0043 l "" -STARTLINE T " \t\t"}
addUserKnob {22 log l "<a href=\"https://johntothvfx.com\"><span style=\"color:#000070\">Version Log</a>\n" -STARTLINE T "nuke.message(\"<i><b>Version Log:</i></b><br><br><b>v 1.0</b><br><i>- creation of the tool</i></b><br><br><b>v 1.1</b><br><i>- Anti aliasing depth from deep front/back was added</i><br></i><br><br></i><b>John Toth © 2021\")\n"}
}
Input {
inputs 0
name Input
xpos 550
ypos -634
}
Dot {
name Dot7
note_font_size 35
note_font_color 0xffffff
xpos 584
ypos -366
}
set N477ab200 [stack 0]
DeepToImage {
name DeepToImage1
xpos 550
ypos -250
}
Dot {
name Dot14
xpos 584
ypos 142
}
set N477aa400 [stack 0]
Dot {
name Dot15
xpos 324
ypos 142
}
set N477a9d00 [stack 0]
Dot {
name Dot1
note_font_size 35
note_font_color 0xffffff
xpos 104
ypos 142
}
set N477a9600 [stack 0]
Shuffle {
red white
green white
blue white
alpha white
name Shuffle9
label "<b>\[value in]</b> &rarr; \[value out]"
xpos -260
ypos 128
}
push $N477ab200
Dot {
name Dot11
note_font_size 35
note_font_color 0xffffff
xpos -390
ypos -366
}
DeepRecolor {
inputs 2
name DeepRecolor7
xpos -424
ypos 138
}
Dot {
name Dot8
note_font_size 35
note_font_color 0xffffff
xpos -671
ypos 142
}
set N4777f900 [stack 0]
DeepExpression {
chans1 deep
rgba.red deep.back*rgba.alpha
rgba.green deep.back*rgba.alpha
rgba.blue deep.back*rgba.alpha
name DeepExpression1
label Back
xpos -705
ypos 228
}
push $N4777f900
Dot {
name Dot10
note_font_size 35
note_font_color 0xffffff
xpos -891
ypos 142
}
DeepExpression {
chans1 deep
rgba.red deep.front*rgba.alpha
rgba.green deep.front*rgba.alpha
rgba.blue deep.front*rgba.alpha
name DeepExpression13
label Front
xpos -925
ypos 228
}
Switch {
inputs 2
which {{generate}}
name Switch3
xpos -810
ypos 354
}
DeepToImage {
name DeepToImage3
xpos -810
ypos 518
}
Unpremult {
name Unpremult1
xpos -810
ypos 714
}
push $N477a9d00
add_layer {Z Z.red Z.green Z.blue Z.alpha Z.x DefZ.alpha Z.R Z.G Z.B}
Shuffle {
in deep
red green
blue green
alpha black
out {Z.red Z.green Z.blue Z.alpha}
name Back
label "<b>\[value in]</b> &rarr; \[value out]"
xpos 290
ypos 220
}
push $N477a9600
Shuffle {
in deep
green red
blue red
alpha black
out {Z.red Z.green Z.blue Z.alpha}
name Front
label "<b>\[value in]</b> &rarr; \[value out]"
xpos 70
ypos 220
}
Switch {
inputs 2
which {{generate}}
name Switch2
xpos 180
ypos 350
}
Copy {
inputs 2
from0 rgba.red
to0 Z.red
from1 rgba.green
to1 Z.green
from2 rgba.blue
to2 Z.blue
name Copy1
selected true
xpos 180
ypos 696
disable {{!antialias}}
}
Dot {
name Dot16
xpos 214
ypos 975
}
set N47752b00 [stack 0]
Dot {
name Dot18
xpos 214
ypos 1168
}
Expression {
channel1 depth
channel2 depth
expr2 "1/Z.red, (isinf(Z)?0:depth.Z)"
name Expression1
xpos 324
ypos 1164
}
push $N47752b00
Expression {
channel0 {Z.red Z.green Z.blue Z.alpha}
expr0 "Z.blue == inf ? 0 : Z.blue"
fringe true
name Expression2
xpos 324
ypos 971
}
push $N477aa400
Copy {
inputs 2
channels {Z.red Z.green Z.blue Z.alpha}
bbox B
name Copy4
xpos 550
ypos 959
disable {{1-parent.z}}
}
Copy {
inputs 2
channels depth
bbox B
name Copy7
xpos 550
ypos 1152
disable {{1-parent.depth}}
}
Dot {
name Dot2
note_font_size 35
note_font_color 0xffffff
xpos 584
ypos 1386
}
set N47750100 [stack 0]
Dot {
name Dot4
note_font_size 35
note_font_color 0xffffff
xpos 694
ypos 1386
}
set N4771f900 [stack 0]
Dot {
name Dot3
note_font_size 35
note_font_color 0xffffff
xpos 821
ypos 1386
}
Shuffle {
in {Z.red Z.green Z.blue Z.alpha}
in2 rgba
green red
blue red
alpha alpha2
name Shuffle2
label "<b>\[value in]</b> &rarr; \[value out]"
xpos 787
ypos 1444
}
push $N4771f900
Shuffle {
in depth
in2 rgba
green red
blue red
alpha alpha2
name Shuffle1
label "<b>\[value in]</b> &rarr; \[value out]"
xpos 660
ypos 1444
}
push $N47750100
Switch {
inputs 3
which {{output}}
name Switch1
xpos 550
ypos 1574
}
Output {
name Output1
xpos 550
ypos 1694
}
end_group
