Group {
 name PositionConvert
 help "Simply converts Position between World and Camera space."
 tile_color 0x184789ff
 selected true
 addUserKnob {20 positionConverttab l "Position Convert"}
 addUserKnob {41 channel t "Selected your position layer to be used for conversion." T Shuffle1.in}
 addUserKnob {26 space000 l "" +STARTLINE T "\t"}
 addUserKnob {83 output l "Convert to:" t "What would you like to convert you position layer too.\n\nworld space - where the object lives\nCamera space  - based on the screen(view point)\n" M {WorldSpace CameraSpace}}
 output CameraSpace
 addUserKnob {26 space001_1 l "" +STARTLINE T "\t"}
 addUserKnob {83 replaceRGB l "View Position" t "Replaces RGB with the selective channel layer with effect applied." M {on off}}
 replaceRGB off
 addUserKnob {26 space l "" +STARTLINE T "<br><br><font size='5'>Position Convert</font><font color=#194d95> v1.0<br>"}
 addUserKnob {20 Help}
 addUserKnob {26 guide l "" +STARTLINE T "<br><font size='5'>Basic Setup</font>"}
 addUserKnob {26 ""}
 addUserKnob {26 steps l "" +STARTLINE T "<br><strong>1. </br> \nSimply converts between world/camera space\n\n<br><br><b>John Toth © 2020 <br>"}
 addUserKnob {26 link l "" +STARTLINE T "<a href=\"https://johntothvfx.com\"><span style=\"color:#194d95\">johntothvfx.com</a>\n"}
 addUserKnob {26 space001 l "" -STARTLINE T " \t\t"}
 addUserKnob {22 log l "<a href=\"https://johntothvfx.com\"><span style=\"color:#194d95\">Version Log</a>\n" -STARTLINE T "nuke.message(\"<i><b>Version Log:</i></b><br><br><b>v 1.0</b><br><i>- creation of the tool</i><br><br><b> Special Thanks to Daniel Velikov as this is his world/camera space.</i><br><br></i><b>John Toth © 2020\")\n"}
}
 Input {
  inputs 0
  name camera
  xpos 10
  ypos -105
  number 1
 }
 Axis2 {
  name Camera_INPUT
  tile_color 0xffff
  xpos 20
  ypos 162
  addUserKnob {20 User}
  addUserKnob {7 focal}
  focal {{"\[value \[topnode parent.input1].focal]"}}
  addUserKnob {7 haperture}
  haperture {{"\[value \[topnode parent.input1].haperture]"}}
  addUserKnob {26 ""}
  addUserKnob {7 winroll}
  winroll {{"\[value \[topnode parent.input1].winroll]"}}
  addUserKnob {30 wintranslate}
  wintranslate {{"\[value \[topnode parent.input1].win_translate.u]"} {"\[value \[topnode parent.input1].win_translate.v]"}}
  addUserKnob {30 winscale}
  winscale {{"\[value \[topnode parent.input1].win_scale.u]"} {"\[value \[topnode parent.input1].win_scale.v]"}}
 }
 Input {
  inputs 0
  name Input
  xpos 400
  ypos -177
 }
 Dot {
  name Dot8
  note_font_size 35
  note_font_color 0xffffff
  xpos 434
  ypos -78
 }
set Ndc6d6b00 [stack 0]
 Shuffle {
  in none
  name Shuffle1
  label "<b>\[value in]</b> &rarr; \[value out]"
  xpos 400
  ypos 2
 }
 Dot {
  name Dot5
  note_font_size 35
  note_font_color 0xffffff
  xpos 434
  ypos 138
 }
set Ndc6d5d00 [stack 0]
 Dot {
  name Dot9
  note_font_size 35
  note_font_color 0xffffff
  xpos 654
  ypos 138
 }
set Ndc6d5600 [stack 0]
 Dot {
  name Dot6
  note_font_size 35
  note_font_color 0xffffff
  xpos 874
  ypos 138
 }
 Expression {
  expr0 "( (x+.5) - width *.5  )"
  expr1 "( ( (y+.5)  - height *.5 ) /  pixel_aspect )"
  name Stmap_PixelAspect1
  tile_color 0xffff
  xpos 840
  ypos 411
 }
push $Ndc6d5600
 Expression {
  temp_name0 dx
  temp_expr0 Camera_INPUT.translate.x-r
  temp_name1 dy
  temp_expr1 Camera_INPUT.translate.y-g
  temp_name2 dz
  temp_expr2 Camera_INPUT.translate.z-b
  channel0 rgba
  expr0 sqrt(dx*dx+dy*dy+dz*dz)
  channel1 none
  channel2 none
  channel3 rgb
  name Expression7
  label "convert p world to z-depth"
  xpos 620
  ypos 297
 }
 Expression {
  channel0 rgba
  expr0 1/r
  name Expression4
  xpos 620
  ypos 351
 }
 MergeExpression {
  inputs 2
  temp_name0 srow
  temp_expr0 "sin( radians(-Camera_INPUT.winroll ) )"
  temp_name1 crow
  temp_expr1 "cos( radians(-Camera_INPUT.winroll) )"
  temp_name2 RATIO
  temp_expr2 "1.0 / ( - width * ( Camera_INPUT.focal / Camera_INPUT.haperture ) )"
  temp_name3 Z
  temp_expr3 "( 1.0 / Br )"
  expr0 "( ( ( crow * Ar ) - ( srow * Ag ) ) * Camera_INPUT.winscale.u + ( Camera_INPUT.wintranslate.u * width * 0.5 ) ) * -RATIO * Z"
  expr1 "( ( ( srow * Ar ) + ( crow * Ag ) ) * Camera_INPUT.winscale.v  + ( Camera_INPUT.wintranslate.v * width * 0.5 ) ) * -RATIO  * Z"
  expr2 -Z
  name Camera_Space2
  tile_color 0xffff
  xpos 620
  ypos 411
 }
 Dot {
  name Dot7
  note_font_size 35
  note_font_color 0xffffff
  xpos 654
  ypos 474
 }
 Dot {
  name Dot4
  tile_color 0xff0000ff
  gl_color 0xffff
  label "  <font color = \"RED\" >  CAMERA SPACE OUT</font>"
  note_font "Sans Serif"
  note_font_size 12
  note_font_color 0xffff
  xpos 654
  ypos 546
 }
push $Ndc6d5d00
 Dot {
  name Dot2
  tile_color 0xff0000ff
  gl_color 0xffff
  label "  <font color = \"RED\" >  CAMERA SPACE IN</font>"
  note_font "Sans Serif"
  note_font_size 12
  note_font_color 0xffff
  xpos 434
  ypos 258
 }
 Expression {
  expr0 "Camera_INPUT.world_matrix.0 * r + Camera_INPUT.world_matrix.1 * g +Camera_INPUT.world_matrix.2 * b + Camera_INPUT.world_matrix.3 "
  expr1 "Camera_INPUT.world_matrix.4 * r + Camera_INPUT.world_matrix.5* g + Camera_INPUT.world_matrix.6 * b + Camera_INPUT.world_matrix.7"
  expr2 "Camera_INPUT.world_matrix.8 * r + Camera_INPUT.world_matrix.9 * g + Camera_INPUT.world_matrix.10 * b + Camera_INPUT.world_matrix.11"
  channel3 alpha
  expr3 "Camera_INPUT.world_matrix.12 * r + Camera_INPUT.world_matrix.13 * g + Camera_INPUT.world_matrix.14 * b + Camera_INPUT.world_matrix.15"
  name World_Space
  tile_color 0xff0000ff
  xpos 400
  ypos 399
 }
 Dot {
  name Dot3
  tile_color 0xffff
  gl_color 0xffff
  label "  <font color = \"blue\" >  WORLD SPACE OUT</font>"
  note_font "Sans Serif"
  note_font_size 12
  note_font_color 0xffff
  xpos 434
  ypos 498
 }
 Switch {
  inputs 2
  which {{output}}
  name Switch1
  xpos 400
  ypos 543
 }
 Expression {
  expr0 isinf(r)?0:r
  expr1 isinf(g)?0:g
  expr2 isinf(b)?0:b
  expr3 isinf(a)?0:a
  name Expression1
  label "infinity To Black"
  xpos 400
  ypos 597
 }
 Expression {
  expr0 isnan(r)?0:r
  expr1 isnan(g)?0:g
  expr2 isnan(b)?0:b
  expr3 isnan(a)?0:a
  name Expression8
  label nan_To_Black
  xpos 400
  ypos 633
 }
set Ndc67b900 [stack 0]
push $Ndc6d6b00
 Dot {
  name Dot10
  note_font_size 35
  note_font_color 0xffffff
  xpos 283
  ypos -78
 }
 ShuffleCopy {
  inputs 2
  red red
  green green
  blue blue
  alpha alpha2
  out {{{Shuffle1.in}}}
  name ShuffleCopy1
  label "<b>\[value in]</b> &rarr; \[value out]"
  xpos 249
  ypos 626
 }
 Dot {
  name Dot1
  note_font_size 35
  note_font_color 0xffffff
  xpos 283
  ypos 810
 }
set Ndc67a400 [stack 0]
push $Ndc67b900
push $Ndc67a400
 Copy {
  inputs 2
  from0 -rgba.alpha
  to0 -rgba.alpha
  channels rgb
  name Copy1
  xpos 400
  ypos 914
 }
 Switch {
  inputs 2
  which {{replaceRGB}}
  name Switch2
  xpos 249
  ypos 1023
 }
 Output {
  name Output1
  xpos 249
  ypos 1215
 }
end_group