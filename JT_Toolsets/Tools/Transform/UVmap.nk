Group {
 name UVmap1
 help "Creates a UV map expression where each color pixel value correspnds to an X and Y coordinate in Screen-Space.\n"
 tile_color 0xffe0ffff
 selected true
 addUserKnob {20 UV_mapTab l "UV Map"}
 addUserKnob {1 CLASSIFICATION +INVISIBLE}
 CLASSIFICATION UVmap
 addUserKnob {14 overscan l "add pixels" t "Adds pixels onwards either in X or Y." R 0 1000}
 addUserKnob {20 info l Info}
 addUserKnob {26 version l "" +STARTLINE T "<br><font size='5'>UV map </font><font color=#747474> v1.2"}
 addUserKnob {26 ""}
 addUserKnob {26 bulletpoints l "" +STARTLINE T "<br><strong>•</br> \n<b>UV map</b> is where every pixel has a unique color <br>value that corresponds to an X and Y coordinate in<br> screen-space.\n\n<br>\n<i>\n<br><strong>•</br> \nThe resolution of the UV map will automatically be<br> detected from incoming input, otherwise by default it's<br>the root format.\n</i>\n</i><br><br><b><a href=\"https://johntothvfx.com\" style=\"color:#747474;\">John Toth <b>© 2019 <br>\n"}
 addUserKnob {26 ""}
 addUserKnob {22 demo l "<a href=\"https://johntothvfx.com\"><span style=\"color:#747474\">Tool Demo" t "Launches the web page where it will have more documentation or a video about the node." T "import webbrowser\n\ndef openWebpage():\n  webbrowser.open(\"https://www.youtube.com/watch?v=voEThopeTXY&list=PL5g6HTowiL5NNF3rrPiNzWvwVTTwkq-6I&index=3\")\n\nopenWebpage()" +STARTLINE}
 addUserKnob {22 log l "<a href=\"https://johntothvfx.com\"><span style=\"color:#747474\">Version Log</a>\n" t "contains information about this node.\n\n- classification\n- context\n- date last modified\n- developer notes\n- version number\n- version log\n- year made" -STARTLINE T "\nname = nuke.thisNode()\['CLASSIFICATION'].getValue()\nversion_number = \"1.2.0\"\ncontext = \"Transform\"\n\n\ndate = \"22th June\"\nyear = \" 2024\"\n\ndeveloper = \"John Toth © 2019\"\nsite = \"<a href='https://johntothvfx.com'> <span style='color:#BBBBBB'>\"\n\n\n\nlog = \"\"\"\n<br></i><b> v 1.0 </b><i>\n- generates a UV map\n<br></i><b> v 1.1 </b><i>\n- adding pixels can now be done independently in X, Y\n<br></i><b> v 1.2 </b><i>\n- UV map will now generate overscan if the incoming input has it\n- demo button was added\n\"\"\"\n\n\n\n\nthankyou = \"\"\"\n\"\"\"\n\n\n\"\"\"Do not touch section below\"\"\"\nheader = \"Version Log:\"\nDLM = \"<b>Date Last Modified: </b>\" + date + year\n\nSPACE = \" \"\nENTER = \"<br><br>\"\nUPPER = \"<b>\"\nLOWER = \"</b>\"\n\n\n\nnuke.message(UPPER + header + ENTER + \"Name: \" + LOWER + name + \"<br>\" + UPPER + \"Version Number: \" + LOWER + version_number + \"<br>\" + UPPER + \"Context: \" + LOWER + context + ENTER + DLM + log + \"</i>\" + UPPER + site + developer + ENTER + \"</a>\") \n\n\n"}
}
 Input {
  inputs 0
  name Input
  xpos -491
  ypos -538
 }
 Remove {
  name Remove5
  xpos -491
  ypos -496
 }
 Dot {
  name Dot2
  note_font_size 35
  note_font_color 0xffffff
  xpos -457
  ypos -414
 }
set N52ee4600 [stack 0]
 Dot {
  name Dot1
  note_font_size 35
  note_font_color 0xffffff
  xpos -336
  ypos -414
 }
 Crop {
  box {{min(bbox.x,r)} {min(bbox.y,y)} {max(bbox.r,width)} {max(bbox.t,height)}}
  crop false
  name Crop1
  xpos -370
  ypos -370
 }
 Dot {
  name Dot3
  note_font_size 35
  note_font_color 0xffffff
  xpos -336
  ypos -318
 }
push $N52ee4600
 Reformat {
  type "to box"
  box_width {{input.width}}
  box_height {{input.height}}
  box_fixed true
  box_pixel_aspect {{input.pixel_aspect}}
  black_outside true
  name Reformat1
  xpos -491
  ypos -370
 }
 CopyBBox {
  inputs 2
  name CopyBBox1
  xpos -491
  ypos -322
 }
 AdjBBox {
  numpixels {{overscan} {overscan}}
  name AdjBBox1
  xpos -491
  ypos -250
 }
 Expression {
  expr0 "(x+0.5) / width"
  expr1 "(y+0.5) / height"
  channel2 none
  channel3 none
  name Expression
  xpos -491
  ypos -202
 }
 Output {
  name Output
  xpos -491
  ypos -58
 }
end_group
