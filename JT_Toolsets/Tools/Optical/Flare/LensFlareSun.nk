Group {
 name LensFlareSun2
 onCreate "n = nuke.thisNode()\n\nif n.knob('replace').value() == 1:    \n    n\['operations'].setEnabled(False)\nelse:\n    n\['operations'].setEnabled(True)"
 tile_color 0x5d48a1ff
 selected true
 addUserKnob {20 lensFlareSun l "Lens Flare Sun"}
 addUserKnob {1 CLASSIFICATION +INVISIBLE}
 CLASSIFICATION LensFlareSun
 addUserKnob {41 layerOutput l "layer ouput" T Merge2.Achannels}
 addUserKnob {26 ""}
 addUserKnob {4 operation t "max max (A,B)\nplus A+B\nscreen  A or B ≤1? A+B-AB: max(A,B)" M {max plus screen "" "" "" "" ""}}
 operation plus
 addUserKnob {6 replace -STARTLINE}
 addUserKnob {26 ""}
 addUserKnob {6 solo l "solo element" +STARTLINE}
 addUserKnob {26 ""}
 addUserKnob {41 addFlicker_1 l "add flicker" T Flicker1.addFlicker}
 addUserKnob {41 enableDynamic l "enable dynamic" T DynamicTrigger.enableDynamic}
 addUserKnob {26 ""}
 addUserKnob {6 multiply_panelDropped l "panel dropped state" +HIDDEN +STARTLINE}
 addUserKnob {7 uniform_scale l "uniform scale" R 0 4}
 uniform_scale 1
 addUserKnob {26 ""}
 addUserKnob {7 gain}
 gain 0.218
 addUserKnob {7 gamma R 0 4}
 gamma 1
 addUserKnob {26 ""}
 addUserKnob {7 mix}
 mix 1
 addUserKnob {20 color l Color}
 addUserKnob {18 gainColor l gain}
 gainColor {0.75 1 1.25}
 addUserKnob {6 gainColor_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {18 gammaColor l gamma}
 gammaColor 1
 addUserKnob {6 gammaColor_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 color_rgb_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {26 space000 l "" +STARTLINE T "\t"}
 addUserKnob {7 rolloff}
 rolloff 0.01
 addUserKnob {20 flicker l Flicker}
 addUserKnob {41 addFlicker l "add flicker" T Flicker1.addFlicker}
 addUserKnob {26 ""}
 addUserKnob {7 minimum R 0 4}
 minimum 0.75
 addUserKnob {7 maximum R 0 4}
 maximum 1.25
 addUserKnob {7 speed R 0 10}
 speed 7.6
 addUserKnob {26 ""}
 addUserKnob {7 clampMinimum l "clamp min" +DISABLED}
 addUserKnob {41 clampMinimumEnabled l "clamp min " -STARTLINE T Flicker1.clampMinimumEnabled}
 addUserKnob {7 clampMaximum l "clamp max" +DISABLED}
 clampMaximum 1
 addUserKnob {41 clampMaximumEnabled l "clamp max" -STARTLINE T Flicker1.clampMaximumEnabled}
 addUserKnob {26 ""}
 addUserKnob {3 seed}
 seed 553
 addUserKnob {22 randomize -STARTLINE T "import random\nnuke.thisNode().knob(\"seed\").setValue(random.randint(1,1000))"}
 addUserKnob {26 ""}
 addUserKnob {7 mixFlicker l mix}
 mixFlicker 1
 addUserKnob {20 dynamic l Dynamic}
 addUserKnob {41 enableDynamic_1 l "enable dynamic" T DynamicTrigger.enableDynamic}
 addUserKnob {6 visualizeDynamicOverlay l "visualize trigger overlay" +STARTLINE}
 addUserKnob {26 ""}
 addUserKnob {4 triggerType l type +INVISIBLE M {border center "" "" "" ""}}
 addUserKnob {4 dynamicFalloff l "" -STARTLINE M {linear smooth ""}}
 dynamicFalloff smooth
 addUserKnob {6 effectOnly l "effect only" -STARTLINE}
 addUserKnob {26 space001 l "" +STARTLINE T "\t"}
 addUserKnob {18 ColorShift l "color shift" +INVISIBLE}
 ColorShift {1 0 0}
 addUserKnob {6 ColorShift_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {7 dynamicBrightness l brightness R 0 100}
 dynamicBrightness 10
 addUserKnob {14 dynamicScale l scale R 0 250}
 dynamicScale 3000
 addUserKnob {20 math l Math}
 addUserKnob {4 math_distance l math t "This only works if 3D option is enabled." M {none direct -direct "" "" "" "" "" "" "" "" "" "" "" "" ""}}
 math_distance direct
 addUserKnob {3 worldScaleOffset l offset}
 addUserKnob {26 ""}
 addUserKnob {4 falloff M {linear smooth quadratic cubic exponential "" "" "" ""}}
 addUserKnob {26 ""}
 addUserKnob {41 behindCamera l "hide behind camera" T BehindCameraCalc.behindCamera}
 addUserKnob {26 ""}
 addUserKnob {26 warningMath l "" +STARTLINE T "<font color=#747474><b> Warning </b>\n<br>\n<font color=#747474><br><strong>•</br></b> If unsure about the knobs (options) in the<br>this tab please leave them as default."}
 addUserKnob {20 visualize l Visualize}
 addUserKnob {6 warning l "enable overlay that \"solo element\" is ticked on" t "when \"solo element\" is enabled along with this tick box, a warning label will be displayed on the image. \n\nThis is just a reminder label to tell the user that \"solo element\" is enabled." +STARTLINE}
 warning true
 addUserKnob {18 warningColor l "warning color"}
 warningColor {1 1 0}
 addUserKnob {6 warningColor_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {26 ""}
 addUserKnob {18 visualizeTriggerOverlayColor l "dynamic overlay color"}
 visualizeTriggerOverlayColor {0 0 0}
 addUserKnob {6 visualizeTriggerOverlayColor_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {20 info l Info}
 addUserKnob {26 version l "" +STARTLINE T "<br><font size='5'>Lens Flare Sun</font><font color=#747474> v1.0"}
 addUserKnob {26 ""}
 addUserKnob {26 bulletpoints l "" +STARTLINE T "<br><strong>•</br><b>Lens Flare</b> disciption to come\n<br><br><b><a href=\"https://johntothvfx.com\" style=\"color:#777;\">John Toth <b>© 2023 <br>"}
 addUserKnob {26 ""}
 addUserKnob {22 demo l "<a href=\"https://johntothvfx.com\"><span style=\"color:#747474\">Tool Demo</a>\n" t "Launches the web page where it will have more documentation or a video about the node." T "nuke.message(\"Coming Soon\")" +STARTLINE}
 addUserKnob {22 log l "<a href=\"https://johntothvfx.com\"><span style=\"color:#747474\">Version Log</a>\n" t "Contains information about the node with version log information." -STARTLINE T "\nname = nuke.thisNode()\['CLASSIFICATION'].getValue()\nmodel_number = \"1.0.0\"\ncontext = \"Optical\"\n\ndate = \"30th November\"\nyear = \"2023\"\n\ndeveloper = \"John Toth © \" + year\nsite = \"<a href='https://johntothvfx.com'> <span style='color:#BBBBBB'>\"\n\n\n\nlog = \"\"\"\n<br></i><b> v 1.0 </b><i>\n-  makes a glow\n\"\"\"\n\n\n\nthankyou = \"\"\"\n\n\"\"\"\n\n\n\"\"\"Do not touch section below\"\"\"\nheader = \"Version Log:\"\nDLM = \"<b>Date Last Modified: </b>\" + date + year\n\nSPACE = \" \"\nENTER = \"<br><br>\"\nUPPER = \"<b>\"\nLOWER = \"</b>\"\n\n\n\nnuke.message(UPPER + header + ENTER + \"Name: \" + LOWER + name + \"<br>\" + UPPER + \"Model Number: \" + LOWER + model_number + \"<br>\" + UPPER + \"Context: \" + LOWER + context + ENTER + DLM + log + \"</i>\" + \"<br>\" + UPPER + site + developer + \"</a>\") \n"}
}
 BackdropNode {
  inputs 0
  name BackdropNode1
  tile_color 0x511825ff
  label "<center>3D ONLY\n<font size=1>disable sun if it goes behind Camera "
  note_font "Source Code Pro Light"
  note_font_size 24
  note_font_color 0xee453cff
  xpos -665
  ypos 1755
  border_width 15
  bookmark false
  bdwidth 340
  bdheight 490
  addUserKnob {20 "Backdrop Settings"}
  addUserKnob {3 padding l Padding}
  padding 75
  addUserKnob {22 snap l "Snap to selected nodes" -STARTLINE T "this = nuke.thisNode()\nselNodes = nuke.selectedNodes()\npadding = this.knob('padding').value()\nif len(selNodes)== 0:\n\tpass\nelse:\n\tbdX = min(\[node.xpos() for node in selNodes]) - padding\n\tbdY = min(\[node.ypos() for node in selNodes]) - padding - 60\n\tbdW = max(\[node.xpos() + node.screenWidth() for node in selNodes]) + padding\n\tbdH = max(\[node.ypos() + node.screenHeight() for node in selNodes]) + padding\n\tthis.knob('xpos').setValue(bdX)\n\tthis.knob('ypos').setValue(bdY)\n\tthis.knob('bdwidth').setValue(bdW-bdX)\n\tthis.knob('bdheight').setValue(bdH-bdY)"}
 }
 BackdropNode {
  inputs 0
  name BackdropNode2
  tile_color 0x7aa9ffff
  label "<center>3D ONLY\n<font size=1>disable sun if it goes behind Camera "
  note_font "Source Code Pro Light"
  note_font_size 24
  note_font_color 0xff
  xpos -665
  ypos 1243
  border_width 15
  bookmark false
  bdwidth 340
  bdheight 490
  addUserKnob {20 "Backdrop Settings"}
  addUserKnob {3 padding l Padding}
  padding 75
  addUserKnob {22 snap l "Snap to selected nodes" -STARTLINE T "this = nuke.thisNode()\nselNodes = nuke.selectedNodes()\npadding = this.knob('padding').value()\nif len(selNodes)== 0:\n\tpass\nelse:\n\tbdX = min(\[node.xpos() for node in selNodes]) - padding\n\tbdY = min(\[node.ypos() for node in selNodes]) - padding - 60\n\tbdW = max(\[node.xpos() + node.screenWidth() for node in selNodes]) + padding\n\tbdH = max(\[node.ypos() + node.screenHeight() for node in selNodes]) + padding\n\tthis.knob('xpos').setValue(bdX)\n\tthis.knob('ypos').setValue(bdY)\n\tthis.knob('bdwidth').setValue(bdW-bdX)\n\tthis.knob('bdheight').setValue(bdH-bdY)"}
 }
 BackdropNode {
  inputs 0
  name BackdropNode3
  tile_color 0xaaaaaaff
  label "<center>generate alpha"
  note_font "Source Code Pro Light"
  note_font_size 24
  note_font_color 0xee453cff
  xpos -665
  ypos 2272
  border_width 15
  bookmark false
  bdwidth 340
  bdheight 400
  addUserKnob {20 "Backdrop Settings"}
  addUserKnob {3 padding l Padding}
  padding 75
  addUserKnob {22 snap l "Snap to selected nodes" -STARTLINE T "this = nuke.thisNode()\nselNodes = nuke.selectedNodes()\npadding = this.knob('padding').value()\nif len(selNodes)== 0:\n\tpass\nelse:\n\tbdX = min(\[node.xpos() for node in selNodes]) - padding\n\tbdY = min(\[node.ypos() for node in selNodes]) - padding - 60\n\tbdW = max(\[node.xpos() + node.screenWidth() for node in selNodes]) + padding\n\tbdH = max(\[node.ypos() + node.screenHeight() for node in selNodes]) + padding\n\tthis.knob('xpos').setValue(bdX)\n\tthis.knob('ypos').setValue(bdY)\n\tthis.knob('bdwidth').setValue(bdW-bdX)\n\tthis.knob('bdheight').setValue(bdH-bdY)"}
 }
 BackdropNode {
  inputs 0
  name BackdropNode4
  tile_color 0x5d48a1ff
  label "<center>Dynamic\n<font size=1>add blooming to edge of screen"
  note_font "Source Code Pro Light"
  note_font_size 24
  note_font_color 0xff
  xpos -1105
  ypos -285
  border_width 15
  bookmark false
  bdwidth 780
  bdheight 970
  addUserKnob {20 "Backdrop Settings"}
  addUserKnob {3 padding l Padding}
  padding 75
  addUserKnob {22 snap l "Snap to selected nodes" -STARTLINE T "this = nuke.thisNode()\nselNodes = nuke.selectedNodes()\npadding = this.knob('padding').value()\nif len(selNodes)== 0:\n\tpass\nelse:\n\tbdX = min(\[node.xpos() for node in selNodes]) - padding\n\tbdY = min(\[node.ypos() for node in selNodes]) - padding - 60\n\tbdW = max(\[node.xpos() + node.screenWidth() for node in selNodes]) + padding\n\tbdH = max(\[node.ypos() + node.screenHeight() for node in selNodes]) + padding\n\tthis.knob('xpos').setValue(bdX)\n\tthis.knob('ypos').setValue(bdY)\n\tthis.knob('bdwidth').setValue(bdW-bdX)\n\tthis.knob('bdheight').setValue(bdH-bdY)"}
 }
 BackdropNode {
  inputs 0
  name BackdropNode5
  tile_color 0xbc396a01
  label "<center>layer channel"
  note_font "DejaVu Sans"
  note_font_size 24
  xpos 199
  ypos 2438
  border_width 15
  bdwidth 507
  bdheight 840
  addUserKnob {20 "Backdrop Settings"}
  addUserKnob {3 padding l Padding}
  padding 40
  addUserKnob {22 snap l "Snap to selected nodes" -STARTLINE T "this = nuke.thisNode()\nselNodes = nuke.selectedNodes()\npadding = this.knob('padding').value()\nif len(selNodes)== 0:\n\tpass\nelse:\n\tbdX = min(\[node.xpos() for node in selNodes]) - padding\n\tbdY = min(\[node.ypos() for node in selNodes]) - padding - 60\n\tbdW = max(\[node.xpos() + node.screenWidth() for node in selNodes]) + padding\n\tbdH = max(\[node.ypos() + node.screenHeight() for node in selNodes]) + padding\n\tthis.knob('xpos').setValue(bdX)\n\tthis.knob('ypos').setValue(bdY)\n\tthis.knob('bdwidth').setValue(bdW-bdX)\n\tthis.knob('bdheight').setValue(bdH-bdY)"}
 }
 BackdropNode {
  inputs 0
  name BackdropNode6
  tile_color 0xb1b155ff
  label "<center>Solo Element & warning"
  note_font "DejaVu Sans"
  note_font_size 24
  xpos -202
  ypos 3710
  border_width 15
  bdwidth 832
  bdheight 996
  addUserKnob {20 "Backdrop Settings"}
  addUserKnob {3 padding l Padding}
  padding 40
  addUserKnob {22 snap l "Snap to selected nodes" -STARTLINE T "this = nuke.thisNode()\nselNodes = nuke.selectedNodes()\npadding = this.knob('padding').value()\nif len(selNodes)== 0:\n\tpass\nelse:\n\tbdX = min(\[node.xpos() for node in selNodes]) - padding\n\tbdY = min(\[node.ypos() for node in selNodes]) - padding - 60\n\tbdW = max(\[node.xpos() + node.screenWidth() for node in selNodes]) + padding\n\tbdH = max(\[node.ypos() + node.screenHeight() for node in selNodes]) + padding\n\tthis.knob('xpos').setValue(bdX)\n\tthis.knob('ypos').setValue(bdY)\n\tthis.knob('bdwidth').setValue(bdW-bdX)\n\tthis.knob('bdheight').setValue(bdH-bdY)"}
 }
 Input {
  inputs 0
  name Input
  label "\[value number]\n"
  xpos 510
  ypos -1552
 }
 Dot {
  name Dot13
  note_font_size 35
  note_font_color 0xffffff
  xpos 544
  ypos -1110
 }
set N1c574810 [stack 0]
 Dot {
  name Dot14
  note_font_size 35
  note_font_color 0xffffff
  xpos -446
  ypos -1110
 }
set N1c579770 [stack 0]
 Dot {
  name Dot15
  note_font_size 35
  note_font_color 0xffffff
  xpos -1546
  ypos -1110
 }
 Dot {
  name Dot12
  note_font_size 35
  note_font_color 0xffffff
  xpos -1546
  ypos 5106
 }
push $N1c579770
 Dot {
  name Dot9
  note_font_size 35
  note_font_color 0xffffff
  xpos -446
  ypos -1014
 }
set N1c588550 [stack 0]
 Dot {
  name Dot8
  note_font_size 35
  note_font_color 0xffffff
  xpos -556
  ypos -1014
 }
 Dot {
  name Dot7
  note_font_size 35
  note_font_color 0xffffff
  xpos -556
  ypos -822
 }
push $N1c588550
 Remove {
  name Remove2
  label "\[if \{ \[lsearch \"rgb rgba\"  \[value channels]] != -1 \} \{ return \"(\[value channels])\n\" \} else \{ return \"\"\}]\[if \{ \[value channels2] != \"none\"\} \{return \"(\[value channels2])\"\} else \{return \" \"\}]\[if \{ \[value channels3] != \"none\"\} \{return \"\n(\[value channels3])\"\} else \{return \" \"\}]\[if \{ \[value channels4] != \"none\"\} \{return \"\n(\[value channels4])\"\} else \{return \" \"\}]"
  xpos -480
  ypos -976
 }
 Shuffle {
  alpha black
  name Shuffle1
  label "<b>\[value in]</b> &rarr; \[value out]"
  xpos -480
  ypos -938
 }
 Crop {
  box {{"min(0, input.bbox.x)"} {"min(0, input.bbox.y)"} {"max(width, input.bbox.r)"} {"max(height, input.bbox.t)"}}
  name Crop3
  xpos -480
  ypos -874
 }
 CopyMetaData {
  inputs 2
  name CopyMetaData1
  xpos -480
  ypos -826
 }
 Dot {
  name Dot48
  note_font_size 35
  note_font_color 0xffffff
  xpos -446
  ypos -750
 }
set N1c5c6910 [stack 0]
 Expression {
  temp_name0 aspect_ratio
  temp_expr0 "(\[lindex \[metadata lensflare/position] 0 ] - x) / \[metadata lensflare/aspect_ratio] "
  temp_name1 sun_depth
  temp_expr1 "((sqrt(aspect_ratio  * aspect_ratio+ (\[lindex \[metadata lensflare/position] 1 ]  - y) * (\[lindex \[metadata lensflare/position] 1 ] - y))) / ((parent.uniform_scale*1)))"
  temp_name2 scale_math
  temp_expr2 "lerp(0.5, 1.5, ( ( \[metadata lensflare/worldscale] + parent.worldScaleOffset ) / \[metadata lensflare/depth]))"
  temp_name3 invert_scale_math
  temp_expr3 "1 / scale_math"
  expr0 "\[metadata lensflare/mode] == 0 ? sun_depth : (parent.math_distance == 0 ? sun_depth : parent.math_distance == 1 ? sun_depth * invert_scale_math : parent.math_distance == 2 ? sun_depth * scale_math : sun_depth)"
  name Expression1
  label glow
  xpos -480
  ypos -682
 }
 Grade {
  white {{pow(1-parent.gain,4)} {pow(1-parent.gain,4)} {pow(1-parent.gain,4)} 1}
  gamma {{pow2(parent.gamma)}}
  name Grade5
  label gain/gamma
  xpos -480
  ypos -644
 }
 Expression {
  temp_name3 invsqr
  temp_expr3 isnan(r)?0:1/(r*r)
  expr0 invsqr
  expr1 invsqr
  expr2 invsqr
  name Expression12
  label "inverse square"
  xpos -480
  ypos -606
 }
 Expression {
  expr0 "r>c.r&&amnt.r>0?amnt.r<1?-exp(8*amnt.r*(-exp(8*amnt.r)*(r-c.r)-1))/8/amnt.r + exp(-8*amnt.r)/8/amnt.r + c.r:c.r:r"
  expr1 "g>c.g&&amnt.g>0?amnt.g<1?-exp(8*amnt.g*(-exp(8*amnt.g)*(g-c.g)-1))/8/amnt.g + exp(-8*amnt.g)/8/amnt.g + c.g:c.g:g"
  expr2 "b>c.b&&amnt.b>0?amnt.b<1?-exp(8*amnt.b*(-exp(8*amnt.b)*(b-c.b)-1))/8/amnt.b + exp(-8*amnt.b)/8/amnt.b + c.b:c.b:b"
  expr3 a
  name Expression13
  label Rolloff
  xpos -480
  ypos -568
  addUserKnob {20 User}
  addUserKnob {19 c l center}
  c 1
  addUserKnob {6 c_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {6 c_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {6 c_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {6 c_panelDropped_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {19 amnt l amount}
  amnt {{parent.rolloff}}
  addUserKnob {6 amnt_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {6 amnt_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {6 amnt_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {6 amnt_panelDropped_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 }
 Expression {
  temp_name0 falloff_math_r
  temp_expr0 "r * (1/ clamp( 1 ,0.00001,1) )"
  temp_name1 falloff_math_g
  temp_expr1 "g * (1/ clamp( 1 ,0.00001,1) )"
  temp_name2 falloff_math_b
  temp_expr2 "g * (1/ clamp( 1 ,0.00001,1) )"
  channel0 rgb
  expr0 "parent.falloff == 0 ? falloff_math_r : parent.falloff == 1 ? smoothstep( 0 , 1 , falloff_math_r ) : parent.falloff == 2 ? clamp( pow2 ( falloff_math_r ) ) : parent.falloff == 3 ? clamp( falloff_math_r ** 3 ) : pow( 1 - pow( 1 - falloff_math_r , 1 ) , 1 )"
  channel1 {-rgba.red -rgba.green -rgba.blue none}
  expr1 "parent.falloff == 0 ? falloff_math_g : parent.falloff == 1 ? smoothstep( 0 , 1 , falloff_math_g ) : parent.falloff == 2 ? clamp( pow2 ( falloff_math_g ) ) : parent.falloff == 3 ? clamp( falloff_math_g ** 3 ) : pow( 1 - pow( 1 - falloff_math_g , 1 ) , 1 )"
  channel2 {-rgba.red -rgba.green -rgba.blue none}
  expr2 "parent.falloff == 0 ? falloff_math_b : parent.falloff == 1 ? smoothstep( 0 , 1 , falloff_math_b ) : parent.falloff == 2 ? clamp( pow2 ( falloff_math_b ) ) : parent.falloff == 3 ? clamp( falloff_math_b ** 3 ) : pow( 1 - pow( 1 - falloff_math_b , 1 ) , 1 )"
  name Expression14
  label falloff
  xpos -480
  ypos -530
 }
 Grade {
  white {{parent.gainColor} {parent.gainColor} {parent.gainColor} 1}
  gamma {{parent.gammaColor} {parent.gammaColor} {parent.gammaColor} 1}
  name Grade2
  label Color
  xpos -480
  ypos -396
 }
 Clamp {
  channels rgb
  maximum 59999
  MinClampTo_enable true
  MaxClampTo {{maximum}}
  MaxClampTo_enable true
  name Clamp2
  label "\[expr \{\[value minimum_enable]? \"\[value minimum] min\" : \"\"\}]\[expr \{\[value minimum_enable] && \[value maximum_enable]? \"\n\" : \"\"\}]\[expr \{\[value maximum_enable]? \"\[value maximum] max\" : \"\"\}]"
  xpos -480
  ypos -358
 }
 Dot {
  name Dot26
  note_font_size 35
  note_font_color 0xffffff
  xpos -446
  ypos -150
 }
set N1c639c60 [stack 0]
 Dot {
  name Dot37
  note_font_size 35
  note_font_color 0xffffff
  xpos -800
  ypos -150
 }
set N1c63eb90 [stack 0]
 Dot {
  name Dot27
  note_font_size 35
  note_font_color 0xffffff
  xpos -1030
  ypos -150
 }
 Dot {
  name Dot28
  note_font_size 35
  note_font_color 0xffffff
  xpos -1030
  ypos 594
 }
push $N1c63eb90
 Shuffle {
  red black
  green black
  blue black
  alpha black
  name Shuffle2
  label "<b>\[value in]</b> &rarr; \[value out]"
  xpos -834
  ypos -68
 }
set N1c64d970 [stack 0]
 Expression {
  temp_name3 dynamic
  temp_expr3 "max(   clamp(1-(abs(y-height) / parent.dynamicScale)),       clamp(1-(abs(x-width) / parent.dynamicScale)),       clamp(1-(abs(x-0) / parent.dynamicScale)),       clamp(1-(abs(y-0) / parent.dynamicScale))   )"
  expr0 "parent.dynamicFalloff == 0 ? dynamic : smoothstep( 0 , 1 , dynamic)"
  expr1 "parent.dynamicFalloff == 0 ? dynamic : smoothstep( 0 , 1 , dynamic)"
  expr2 "parent.dynamicFalloff == 0 ? dynamic : smoothstep( 0 , 1 , dynamic)"
  name Expression7
  label "Dynamic Border Overlay"
  xpos -834
  ypos 80
 }
 Grade {
  multiply {{"max(parent.ColorShift - 0, 0)"} {"max(parent.ColorShift - 0, 0)"} {"max(parent.ColorShift - 0, 0)"} 0}
  name Grade3
  label "overlay color"
  xpos -834
  ypos 176
 }
 Dot {
  name Dot47
  note_font_size 35
  note_font_color 0xffffff
  xpos -800
  ypos 450
 }
push $N1c639c60
 NoOp {
  name DynamicTrigger
  xpos -480
  ypos -58
  addUserKnob {20 menu}
  addUserKnob {6 enableDynamic l "enable dynamic" +STARTLINE}
  enableDynamic true
 }
 Dot {
  name Dot50
  note_font_size 35
  note_font_color 0xffffff
  xpos -446
  ypos 66
 }
set N1c688520 [stack 0]
 Multiply {
  channels rgba
  value {{"1 + (parent.dynamicBrightness  *   max(    clamp(1-(abs(\[lindex \[metadata lensflare/position] 1 ] - height) / parent.dynamicScale)),       clamp(1-(abs(\[lindex \[metadata lensflare/position] 0 ] - width) / parent.dynamicScale)),       clamp(1-(abs(\[lindex \[metadata lensflare/position] 1 ] - 0) / parent.dynamicScale)),       clamp(1-(abs(\[lindex \[metadata lensflare/position] 0 ] -0) / parent.dynamicScale))   ))"}}
  name Multiply5
  label "Dynamic Border\nOG"
  xpos -480
  ypos 170
 }
 Merge2 {
  inputs 2
  operation plus
  output rgb
  name Merge1
  label "mix: \[value mix] (\[value bbox])"
  xpos -480
  ypos 440
  disable {{!parent.visualizeDynamicOverlay}}
 }
 Switch {
  inputs 2
  which {{!parent.enableDynamic}}
  name Switch5
  xpos -480
  ypos 590
 }
 Multiply {
  channels rgb
  value {{"clamp( parent.mix)"}}
  name Multiply1
  label Mix
  xpos -480
  ypos 1160
 }
 Dot {
  name Dot23
  note_font_size 35
  note_font_color 0xffffff
  xpos -446
  ypos 1378
 }
set N1c6bea20 [stack 0]
 Dot {
  name Dot24
  note_font_size 35
  note_font_color 0xffffff
  xpos -590
  ypos 1378
 }
 Dot {
  name Dot25
  note_font_size 35
  note_font_color 0xffffff
  xpos -590
  ypos 1642
 }
push $N1c6bea20
 NoOp {
  name Flicker1
  onCreate "node = nuke.thisNode()\ngroupNode = nuke.thisGroup()\n\nfor knobName in \[\"clampMinimumEnabled\", \"clampMaximumEnabled\"]:\n    \n    knob = node.knob(knobName)\n    status = knob.value()\n    \n    childKnobName = knobName.replace(\"Enabled\", \"\")\n    childKnob = groupNode.knob(childKnobName)\n\n    if childKnob:\n        childKnob.setEnabled(status)"
  knobChanged "knob = nuke.thisKnob()\nknobName = knob.name()\n\nif knobName.startswith(\"clamp\") and knobName.endswith(\"Enabled\"):\n    \n    groupNode = nuke.thisGroup()\n    status = knob.value()\n    \n    childKnobName = knobName.replace(\"Enabled\", \"\")\n    childKnob = groupNode.knob(childKnobName)\n\n    if childKnob:\n        childKnob.setEnabled(status)"
  xpos -480
  ypos 1478
  addUserKnob {20 menu}
  addUserKnob {6 addFlicker l "add flicker" +STARTLINE}
  addFlicker true
  addUserKnob {26 ""}
  addUserKnob {7 clampMin}
  clampMin {{"parent.clampMinimumEnabled? parent.clampMinimum : parent.minimum"}}
  addUserKnob {6 clampMinimumEnabled l "clamp min " -STARTLINE}
  addUserKnob {7 clampMax}
  clampMax {{"parent.clampMaximumEnabled? parent.clampMaximum : parent.maximum"}}
  addUserKnob {6 clampMaximumEnabled l "clamp max" -STARTLINE}
 }
 Grade {
  white {{"clamp((((random((t*(parent.speed/100) + (random(parent.seed)*1000) ))) * (parent.maximum - parent.minimum)) + parent.minimum), Flicker1.clampMin, Flicker1.clampMax)"}}
  black_clamp false
  name Grade1
  label Flicker
  xpos -480
  ypos 1504
 }
 ModifyMetaData {
  metadata {
   {set lensflare/sun/flicker "\[value Grade1.white]"}
  }
  name ModifyMetaData1
  xpos -480
  ypos 1542
 }
 Switch {
  inputs 2
  which {{!parent.addFlicker}}
  name Switch4
  xpos -480
  ypos 1638
 }
 Dot {
  name Dot21
  note_font_size 35
  note_font_color 0xffffff
  xpos -446
  ypos 1890
 }
set N1c6f5ae0 [stack 0]
 Dot {
  name Dot20
  note_font_size 35
  note_font_color 0xffffff
  xpos -590
  ypos 1890
 }
 Dot {
  name Dot19
  note_font_size 35
  note_font_color 0xffffff
  xpos -590
  ypos 2154
 }
push $N1c6f5ae0
 NoOp {
  name BehindCameraCalc
  xpos -480
  ypos 1982
  addUserKnob {20 menu}
  addUserKnob {6 behindCamera l "hide behind camera" +STARTLINE}
  behindCamera true
  addUserKnob {6 status -STARTLINE}
  status {{"\[metadata lensflare/mode] == 0 ? 1 : 0"}}
  addUserKnob {26 ""}
  addUserKnob {13 translate}
  translate {{"\[lindex \[metadata lensflare/axis/position] 0] - \[lindex \[metadata lensflare/camera/position] 0]"} {"\[lindex \[metadata lensflare/axis/position] 1] - \[lindex \[metadata lensflare/camera/position] 1]"} {"\[lindex \[metadata lensflare/axis/position] 2] - \[lindex \[metadata lensflare/camera/position] 2]"}}
  addUserKnob {13 rotate}
  rotate {{"\[lindex \[metadata lensflare/axis/rotate] 0] - \[lindex \[metadata lensflare/camera/rotate] 0]"} {"\[lindex \[metadata lensflare/axis/rotate] 1] - \[lindex \[metadata lensflare/camera/rotate] 1]"} {"\[lindex \[metadata lensflare/axis/rotate] 2] - \[lindex \[metadata lensflare/camera/rotate] 2]"}}
 }
 Multiply {
  channels rgba
  value {{BehindCameraCalc.translate.z<0?1:0}}
  name Multiply4
  label "Behind Camera"
  xpos -480
  ypos 2050
 }
 Switch {
  inputs 2
  which {{"\[metadata lensflare/mode] == 0 ? 1 : !parent.behindCamera"}}
  name Switch3
  xpos -480
  ypos 2150
 }
 Dot {
  name Dot5
  note_font_size 35
  note_font_color 0xffffff
  xpos -446
  ypos 2407
 }
set N1c720340 [stack 0]
 Dot {
  name Dot6
  note_font_size 35
  note_font_color 0xffffff
  xpos -556
  ypos 2407
 }
 Colorspace {
  colorspace_out HSL
  name Colorspace1
  xpos -590
  ypos 2465
 }
 Clamp {
  channels rgb
  name Clamp1
  label "\[expr \{\[value minimum_enable]? \"\[value minimum] min\" : \"\"\}]\[expr \{\[value minimum_enable] && \[value maximum_enable]? \"\n\" : \"\"\}]\[expr \{\[value maximum_enable]? \"\[value maximum] max\" : \"\"\}]"
  xpos -590
  ypos 2491
 }
 Dot {
  name Dot10
  note_font_size 35
  note_font_color 0xffffff
  xpos -556
  ypos 2575
 }
push $N1c720340
 Copy {
  inputs 2
  from0 rgba.blue
  to0 rgba.alpha
  name Copy1
  xpos -480
  ypos 2565
 }
 Expression {
  expr0 isnan(r)?0:r
  expr1 isnan(g)?0:g
  expr2 isnan(b)?0:b
  channel3 alpha
  expr3 isnan(a)?0:a
  name Expression5
  label "nan to black (0)"
  xpos -480
  ypos 2696
 }
 Dot {
  name Dot44
  note_font_size 35
  note_font_color 0xffffff
  xpos -446
  ypos 2922
 }
set N1c7741a0 [stack 0]
 Dot {
  name Dot11
  note_font_size 35
  note_font_color 0xffffff
  xpos -446
  ypos 3594
 }
set N1c778fc0 [stack 0]
 Dot {
  name Dot29
  note_font_size 35
  note_font_color 0xffffff
  xpos -446
  ypos 4890
 }
push $N1c778fc0
 Dot {
  name Dot30
  note_font_size 35
  note_font_color 0xffffff
  xpos 262
  ypos 3594
 }
set N1c782e30 [stack 0]
push $N1c574810
 Dot {
  name Dot41
  note_font_size 35
  note_font_color 0xffffff
  xpos 544
  ypos 2538
 }
set N1c787cc0 [stack 0]
 Dot {
  name Dot1
  note_font_size 35
  note_font_color 0xffffff
  xpos 544
  ypos 2778
 }
set N1c78d010 [stack 0]
 Dot {
  name Dot18
  note_font_size 35
  note_font_color 0xffffff
  xpos 544
  ypos 2946
 }
set N1c791db0 [stack 0]
 Dot {
  name Dot17
  note_font_size 35
  note_font_color 0xffffff
  xpos 654
  ypos 2946
 }
 Dot {
  name Dot16
  note_font_size 35
  note_font_color 0xffffff
  xpos 654
  ypos 3210
 }
push $N1c7741a0
push $N1c78d010
push $N1c787cc0
 Dot {
  name Dot42
  note_font_size 35
  note_font_color 0xffffff
  xpos 273
  ypos 2538
 }
 Shuffle {
  in {{{parent.Merge2.Achannels}}}
  name Shuffle5
  label "<b>\[value in]</b> &rarr; \[value out]"
  xpos 239
  ypos 2596
 }
 Dot {
  name Dot3
  note_font_size 35
  note_font_color 0xffffff
  xpos 273
  ypos 2682
 }
set N1c7b6830 [stack 0]
 Dot {
  name Dot4
  note_font_size 35
  note_font_color 0xffffff
  xpos 400
  ypos 2682
 }
 Remove {
  name Remove1
  xpos 366
  ypos 2720
 }
 CopyBBox {
  inputs 2
  name CopyBBox1
  xpos 366
  ypos 2774
 }
 Dot {
  name Dot2
  note_font_size 35
  note_font_color 0xffffff
  xpos 400
  ypos 2850
 }
push $N1c7b6830
 Switch {
  inputs 2
  which {{parent.replace}}
  name Switch1
  xpos 239
  ypos 2846
 }
 Merge2 {
  inputs 2
  operation {{"parent.operation == 0 ? 17 : parent.operation == 1 ? 24 : 25"}}
  name merge2
  label "mix: \[value mix] (\[value bbox])"
  xpos 239
  ypos 2912
 }
 Shuffle {
  out {{{parent.Merge2.Achannels}}}
  name Shuffle3
  label "<b>\[value in]</b> &rarr; \[value out]"
  xpos 239
  ypos 2980
 }
 Dot {
  name Dot22
  note_font_size 35
  note_font_color 0xffffff
  xpos 273
  ypos 3090
 }
push $N1c791db0
 Merge2 {
  inputs 2
  operation copy
  Achannels none
  Bchannels none
  output {{{Achannels}}}
  name Merge2
  label "mix: \[value mix] (\[value bbox])"
  xpos 510
  ypos 3074
 }
 Copy {
  inputs 2
  channels rgba
  name Copy2
  xpos 510
  ypos 3194
 }
 Merge2 {
  inputs 2
  operation {{"parent.operation == 0 ? 17 : parent.operation == 1 ? 24 : 25"}}
  name merge1
  label "mix: \[value mix] (\[value bbox])"
  xpos 510
  ypos 3584
 }
 Dot {
  name Dot31
  note_font_size 35
  note_font_color 0xffffff
  xpos 544
  ypos 3810
 }
set N1c834890 [stack 0]
 Dot {
  name Dot33
  note_font_size 35
  note_font_color 0xffffff
  xpos 434
  ypos 3810
 }
 Remove {
  channels rgba
  name Remove3
  label "\[if \{ \[lsearch \"rgb rgba\"  \[value channels]] != -1 \} \{ return \"(\[value channels])\n\" \} else \{ return \"\"\}]\[if \{ \[value channels2] != \"none\"\} \{return \"(\[value channels2])\"\} else \{return \" \"\}]\[if \{ \[value channels3] != \"none\"\} \{return \"\n(\[value channels3])\"\} else \{return \" \"\}]\[if \{ \[value channels4] != \"none\"\} \{return \"\n(\[value channels4])\"\} else \{return \" \"\}]"
  xpos 400
  ypos 3872
 }
 Dot {
  name Dot32
  note_font_size 35
  note_font_color 0xffffff
  xpos 434
  ypos 3954
 }
push $N1c782e30
 Dot {
  name Dot40
  note_font_size 35
  note_font_color 0xffffff
  xpos 262
  ypos 3817
 }
set N1c84c3d0 [stack 0]
 Copy {
  inputs 2
  channels all
  name Copy3
  xpos 228
  ypos 3938
 }
 Dot {
  name Dot46
  note_font_size 35
  note_font_color 0xffffff
  xpos 262
  ypos 4251
 }
set N1c85f940 [stack 0]
push $N1c84c3d0
 Dot {
  name Dot45
  note_font_size 35
  note_font_color 0xffffff
  xpos -18
  ypos 3817
 }
 Remove {
  name Remove4
  label "\[if \{ \[lsearch \"rgb rgba\"  \[value channels]] != -1 \} \{ return \"(\[value channels])\n\" \} else \{ return \"\"\}]\[if \{ \[value channels2] != \"none\"\} \{return \"(\[value channels2])\"\} else \{return \" \"\}]\[if \{ \[value channels3] != \"none\"\} \{return \"\n(\[value channels3])\"\} else \{return \" \"\}]\[if \{ \[value channels4] != \"none\"\} \{return \"\n(\[value channels4])\"\} else \{return \" \"\}]"
  xpos -52
  ypos 3872
 }
 Text {
  cliptype none
  message "\[value parent.name] \n\"solo element\" is Enabled\n\n"
  font "\[python nuke.defaultFontPathname()]"
  size {{"(input.width + input.height)/100"}}
  leading 0.2
  xjustify center
  yjustify top
  box {{input.width/50} {box.x} {"input.width - box.x"} {"input.height - box.x"}}
  color {{parent.warningColor} {parent.warningColor} {parent.warningColor} 1}
  name Text5
  label "\[basename \[value font]]"
  note_font_color 0xffffffff
  xpos -52
  ypos 3944
 }
 Dot {
  name Dot184
  note_font_size 35
  note_font_color 0xffffff
  xpos -18
  ypos 4010
 }
set N1c887330 [stack 0]
 Dot {
  name Dot34
  note_font_size 35
  note_font_color 0xffffff
  xpos -128
  ypos 4010
 }
 Multiply {
  channels rgb
  value 0
  name Multiply2
  xpos -162
  ypos 4055
 }
 Dilate {
  channels alpha
  size 4
  name Dilate2
  xpos -162
  ypos 4136
 }
 Dot {
  name Dot36
  note_font_size 35
  note_font_color 0xffffff
  xpos -128
  ypos 4203
 }
push $N1c887330
 Merge2 {
  inputs 2
  operation under
  name Merge4
  label "mix: \[value mix] (\[value bbox])"
  xpos -52
  ypos 4193
 }
 Dot {
  name Dot43
  note_font_size 35
  note_font_color 0xffffff
  xpos -18
  ypos 4384
 }
push $N1c85f940
 Dot {
  name Dot38
  note_font_size 35
  note_font_color 0xffffff
  xpos 104
  ypos 4251
 }
 Merge2 {
  inputs 2
  name Merge3
  label "mix: \[value mix] (\[value bbox])"
  xpos 70
  ypos 4374
 }
 Dot {
  name Dot39
  note_font_size 35
  note_font_color 0xffffff
  xpos 104
  ypos 4480
 }
 Switch {
  inputs 2
  which {{"parent.warning== 1 ? (parent.solo == 1? 0 : 1) : 1"}}
  name Switch7
  xpos 228
  ypos 4476
 }
 Dot {
  name Dot35
  note_font_size 35
  note_font_color 0xffffff
  xpos 262
  ypos 4650
 }
push $N1c834890
 Switch {
  inputs 2
  which {{parent.solo}}
  name Switch6
  xpos 510
  ypos 4646
 }
 CopyMetaData {
  inputs 2
  metadatafilter lensflare/sun/flicker
  name CopyMetaData2
  xpos 510
  ypos 4886
 }
 Switch {
  inputs 2
  which {{"\[expr \{\[metadata lensflare/info] == 1 ? 0 : 1\}]\n\n"}}
  name Switch2
  xpos 510
  ypos 5102
 }
 Output {
  name Output1
  xpos 510
  ypos 5774
 }
push $N1c5c6910
 Dot {
  name Dot49
  note_font_size 35
  note_font_color 0xffffff
  xpos -146
  ypos -750
 }
 NoOp {
  name RotatePoint1
  tile_color 0xa57aaaff
  label "(\[format  %0.2f \[value rotate]]°)"
  xpos -180
  ypos -712
  addUserKnob {20 rotatePointTab l RotatePoint}
  addUserKnob {12 point}
  point {{"\[lindex \[metadata lensflare/position] 0]"} {"\[lindex \[metadata lensflare/position] 1]"}}
  addUserKnob {26 ""}
  addUserKnob {7 rotate R -360 360}
  rotate 180
  addUserKnob {12 center}
  center {{"\[lindex \[metadata lensflare/center] 0]"} {"\[lindex \[metadata lensflare/center] 1]"}}
  addUserKnob {26 ""}
  addUserKnob {12 result}
  result {{"cos(radians(rotate)) * (point.x-center.x) - sin(radians(rotate)) * (point.y-center.y) + center.x"} {"sin(radians(rotate)) * (point.x-center.x) + cos(radians(rotate)) * (point.y-center.y) + center.y"}}
  addUserKnob {26 WouterGilsing l "" +STARTLINE +INVISIBLE}
 }
 Expression {
  temp_name0 aspect_ratio
  temp_expr0 "(\[lindex \[metadata lensflare/position] 0 ] - x) / \[metadata lensflare/aspect_ratio]"
  temp_name1 sun_depth
  temp_expr1 "((sqrt(aspect_ratio * aspect_ratio + (\[lindex \[metadata lensflare/position] 1 ]  - y) * (\[lindex \[metadata lensflare/position] 1 ] - y))) / ((parent.uniform_scale*1)))"
  temp_name2 scale_math
  temp_expr2 "lerp(0.5, 1.5, ( ( \[metadata lensflare/worldscale] + parent.worldScaleOffset ) / \[metadata lensflare/depth]))"
  temp_name3 invert_scale_math
  temp_expr3 "1 / scale_math"
  expr0 "\[metadata lensflare/mode] == 0 ? sun_depth : (parent.math_distance == 0 ? sun_depth : parent.math_distance == 1 ? sun_depth * invert_scale_math : parent.math_distance == 2 ? sun_depth * scale_math : sun_depth)"
  name Expression6
  label glow
  xpos -180
  ypos -640
 }
 Grade {
  white {{pow(1-parent.gain,4)} {pow(1-parent.gain,4)} {pow(1-parent.gain,4)} 1}
  gamma {{pow2(parent.gamma)}}
  name Grade4
  label gain/gamma
  xpos -180
  ypos -602
 }
 Expression {
  temp_name3 invsqr
  temp_expr3 isnan(r)?0:1/(r*r)
  expr0 invsqr
  expr1 invsqr
  expr2 invsqr
  name Expression8
  label "inverse square"
  xpos -180
  ypos -564
 }
 Expression {
  expr0 "r>c.r&&amnt.r>0?amnt.r<1?-exp(8*amnt.r*(-exp(8*amnt.r)*(r-c.r)-1))/8/amnt.r + exp(-8*amnt.r)/8/amnt.r + c.r:c.r:r"
  expr1 "g>c.g&&amnt.g>0?amnt.g<1?-exp(8*amnt.g*(-exp(8*amnt.g)*(g-c.g)-1))/8/amnt.g + exp(-8*amnt.g)/8/amnt.g + c.g:c.g:g"
  expr2 "b>c.b&&amnt.b>0?amnt.b<1?-exp(8*amnt.b*(-exp(8*amnt.b)*(b-c.b)-1))/8/amnt.b + exp(-8*amnt.b)/8/amnt.b + c.b:c.b:b"
  expr3 a
  name Expression9
  label Rolloff
  xpos -180
  ypos -526
  addUserKnob {20 User}
  addUserKnob {19 c l center}
  c 1
  addUserKnob {6 c_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {6 c_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {6 c_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {6 c_panelDropped_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {19 amnt l amount}
  amnt {{parent.rolloff}}
  addUserKnob {6 amnt_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {6 amnt_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {6 amnt_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {6 amnt_panelDropped_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
 }
 Expression {
  temp_name0 falloff_math_r
  temp_expr0 "r * (1/ clamp( 1 ,0.00001,1) )"
  temp_name1 falloff_math_g
  temp_expr1 "g * (1/ clamp( 1 ,0.00001,1) )"
  temp_name2 falloff_math_b
  temp_expr2 "g * (1/ clamp( 1 ,0.00001,1) )"
  channel0 rgb
  expr0 "parent.falloff == 0 ? falloff_math_r : parent.falloff == 1 ? smoothstep( 0 , 1 , falloff_math_r ) : parent.falloff == 2 ? clamp( pow2 ( falloff_math_r ) ) : parent.falloff == 3 ? clamp( falloff_math_r ** 3 ) : pow( 1 - pow( 1 - falloff_math_r , 1 ) , 1 )"
  channel1 {-rgba.red -rgba.green -rgba.blue none}
  expr1 "parent.falloff == 0 ? falloff_math_g : parent.falloff == 1 ? smoothstep( 0 , 1 , falloff_math_g ) : parent.falloff == 2 ? clamp( pow2 ( falloff_math_g ) ) : parent.falloff == 3 ? clamp( falloff_math_g ** 3 ) : pow( 1 - pow( 1 - falloff_math_g , 1 ) , 1 )"
  channel2 {-rgba.red -rgba.green -rgba.blue none}
  expr2 "parent.falloff == 0 ? falloff_math_b : parent.falloff == 1 ? smoothstep( 0 , 1 , falloff_math_b ) : parent.falloff == 2 ? clamp( pow2 ( falloff_math_b ) ) : parent.falloff == 3 ? clamp( falloff_math_b ** 3 ) : pow( 1 - pow( 1 - falloff_math_b , 1 ) , 1 )"
  name Expression10
  label falloff
  xpos -180
  ypos -488
 }
 StickyNote {
  inputs 0
  name StickyNote1
  label "add scale in x and y for more control"
  xpos -715
  ypos -610
 }
 Multiply {
  inputs 0
  channels rgba
  value {{"1 + (parent.dynamicBrightness  *   max(    clamp(1-(abs(\[lindex \[metadata lensflare/position] 1 ] - height) / parent.dynamicScale)),       clamp(1-(abs(\[lindex \[metadata lensflare/position] 0 ] - width) / parent.dynamicScale)),       clamp(1-(abs(\[lindex \[metadata lensflare/position] 1 ] - 0) / parent.dynamicScale)),       clamp(1-(abs(\[lindex \[metadata lensflare/position] 0 ] -0) / parent.dynamicScale))   ))"}}
  name Multiply6
  label "Dynamic Border\nOG"
  xpos -76
  ypos 170
 }
push $N1c688520
 Multiply {
  channels rgba
  value {{"smoothstep(0, 1, 1 + max(clamp(1 - (abs(y - height) / parent.dynamicScale)), clamp(1 - (abs(x - width) / parent.dynamicScale)), clamp(1 - (abs(x - 0) / parent.dynamicScale)), clamp(1 - (abs(y - 0) / parent.dynamicScale))))\n"}}
  name Multiply3
  label "Dynamic Border\nsmooth"
  xpos -370
  ypos 170
 }
push $N1c64d970
 Expression {
  temp_name3 dynamic
  temp_expr3 "max(   clamp(2-(abs(y-height) / parent.dynamicScale)),       clamp(1-(abs(x-width) / parent.dynamicScale)),       clamp(1-(abs(x-0) / parent.dynamicScale)),       clamp(1-(abs(y-0) / parent.dynamicScale))   )"
  expr0 "smoothstep(0, 1, 1 - max(   clamp(1-(abs(y-height) / parent.dynamicScale)),       clamp(1-(abs(x-width) / parent.dynamicScale)),       clamp(1-(abs(x-0) / parent.dynamicScale)),       clamp(1-(abs(y-0) / parent.dynamicScale))   ))"
  expr1 "1 - max(   clamp(1-(abs(y-height) / parent.dynamicScale)),       clamp(1-(abs(x-width) / parent.dynamicScale)),       clamp(1-(abs(x-0) / parent.dynamicScale)),       clamp(1-(abs(y-0) / parent.dynamicScale))   ))"
  name Expression2
  label "Dynamic Border Overlay"
  xpos -700
  ypos 80
 }
push $N1c64d970
 Expression {
  temp_name3 dynamic
  temp_expr3 "max(   clamp(2-(abs(y-height) / parent.dynamicScale)),       clamp(1-(abs(x-width) / parent.dynamicScale)),       clamp(1-(abs(x-0) / parent.dynamicScale)),       clamp(1-(abs(y-0) / parent.dynamicScale))   )"
  expr0 "1 - max(   clamp(1-(abs(y-height) / parent.dynamicScale)),       clamp(1-(abs(x-width) / parent.dynamicScale)),       clamp(1-(abs(x-0) / parent.dynamicScale)),       clamp(1-(abs(y-0) / parent.dynamicScale))   )"
  name Expression4
  label "Dynamic Border Overlay"
  selected true
  xpos -590
  ypos 80
 }
end_group

