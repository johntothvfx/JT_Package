Group {
 inputs 2
 name AOVPointLight1
 help "Simply converts Position between World and Camera space."
 tile_color 0x184789ff
 selected true
 addUserKnob {20 pointlight_tab l "AOV Point Light"}
 addUserKnob {26 ""}
 addUserKnob {41 normalsChannel l "normals channel" t "Selected your position layer to be used for conversion." T Shuffle1.in}
 addUserKnob {41 in l "position channel" t "Selected your position layer to be used for conversion." T Shuffle2.in}
 addUserKnob {6 normals_picker_panelDropped l "panel dropped state" +HIDDEN +STARTLINE}
 addUserKnob {6 color_rgb_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {26 ""}
 addUserKnob {41 operation l "alpha mode" t "Sets how the pixel values from input A are calculated with the pixel values from input B to create the new pixel values that are output as the merged image: \n\n• absminus abs(A-B) - how much the pixels differ. \n\n• b if not a A?A:B - shows A wherever A exists; otherwise shows B. \n\n• divide A/B, 0 if A<0 and B<0 - divides the values but stops two negative values from becoming a positive number. \n\n• from (B-A) - subtracts A from B. \n\n• in Ab - only shows the areas of image A that overlap with the alpha of B. \n\n• max (max(A,B)) - selects the lighter of the two colors as the resulting color. Only areas darker than B are replaced, while areas lighter than B do not change. \n\n• min (min(A,B)) - selects the darker of the two colors as the resulting color. Any parts that are lighter than B are substituted. Any parts of the image that are darker than B don’t change. \n\n• minus (A-B) - subtracts B from A. \n\n• multiply (AB, A if A<0 and B<0) - multiplies A by B. The result is always darker. Blending with black gives black and with white returns the color unchanged. \n\n• out A(1-b) - only shows the areas of image A that do not overlap with the alpha of B. \n\n• plus A+B - the sum of the two colors. Increases brightness to lighten A and reflect B. \n\n• stencil B(1-a) - this is the reverse of the out operation. Only shows the areas of image B that do not overlap with the alpha of A. \n\n• union A+B-AB - shows both image A and B. \n\n• xor A+B-2AB - shows both image A and B where the images do not overlap." T ChannelMerge2.operation}
 addUserKnob {41 mix t "Dissolves between the original B input at 0 and the full merge effect at 1." T ChannelMerge2.mix}
 addUserKnob {26 "" +STARTLINE}
 addUserKnob {4 output l "alpha falloff" t "Falloff of the alpha channel" M {"No Falloff" Linear Quadratic Cubic "" "" "" "" "" "" "" "" ""}}
 addUserKnob {7 falloff_amount l falloff t "Falloff amount based non the alpha falloff."}
 falloff_amount 1
 addUserKnob {26 ""}
 addUserKnob {20 Visualgroup l Visualize n 1}
 Visualgroup 0
 addUserKnob {6 overlay l "Show 2D overlay" t "Turns the color overlay on/off." +STARTLINE}
 overlay true
 addUserKnob {18 overlayCC l "overlay Color" t "Color of the overlay displayed over the viewport."}
 overlayCC {1 0 0}
 addUserKnob {6 overlayCC_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {7 mixcc l mix t "Dissolves between the original B input at 0 and the full merge effect at 1."}
 mixcc 1
 addUserKnob {26 ""}
 addUserKnob {6 in3D l "Show in 3D" t "The image from which the point cloud is generated, if all xyz data resides in one image. This is also where the color information for the point cloud is taken from." +STARTLINE}
 addUserKnob {7 detail l "Point detail" t "Controls the number of available points to display in the Viewer. A value of 0 means no points are displayed. A value of 1 displays all available points."}
 detail 0.025
 addUserKnob {7 pointSize l "Point size" t "Controls the display size of the points in the Viewer."}
 pointSize 5
 addUserKnob {20 endGroup_1 l endGroup n -1}
 addUserKnob {26 ""}
 addUserKnob {26 space l "" +STARTLINE T "<br><br><font size='5'>AOV Point Light</font><font color=#194d95> v1.0<br>"}
 addUserKnob {20 Help}
 addUserKnob {26 guide l "" +STARTLINE T "<br><font size='5'>Basic Setup</font>"}
 addUserKnob {26 ""}
 addUserKnob {26 steps l "" +STARTLINE T "<br><strong>1. </br> \nA simple spot light is created based<br> on the 3D position of the light source.\n<br><strong>2. </br> \nThe <b>light</b> input should be an axis node.\n\n<br><br><b>John Toth © 2021 <br>"}
 addUserKnob {26 link l "" +STARTLINE T "<a href=\"https://johntothvfx.com\"><span style=\"color:#194d95\">johntothvfx.com</a>\n"}
 addUserKnob {26 space001 l "" -STARTLINE T " \t\t"}
 addUserKnob {22 log l "<a href=\"https://johntothvfx.com\"><span style=\"color:#194d95\">Version Log</a>\n" -STARTLINE T "nuke.message(\"<i><b>Version Log:</i></b><br><br><b>v 1.0</b><br><i>- creation of the tool.<br><br><b> Special Thanks to Daniel Velikov</i><br><br></i><b>John Toth © 2021\")\n"}
}
 BackdropNode {
  inputs 0
  name BackdropNode1
  tile_color 0x23232301
  label "<center><font size='5'></font><font color=#ee453c> Normals Matte\n</center><font size='1'>\n- Relighting\n"
  note_font "Source Code Pro Light"
  note_font_size 40
  xpos 1135
  ypos -124
  bdwidth 632
  bdheight 355
 }
 BackdropNode {
  inputs 0
  name BackdropNode4
  tile_color 0x23232301
  label "<center><font size='5'></font><font color=#ee453c> Falloff filter can be applied\n</center><font size='1'>\n- falloff of the matte\n"
  note_font "Source Code Pro Light"
  note_font_size 40
  xpos 755
  ypos 279
  bdwidth 805
  bdheight 689
 }
 BackdropNode {
  inputs 0
  name BackdropNode5
  tile_color 0x23232301
  label "<center><font size='5'></font><font color=#ee453c> 3D visualization\n</center><font size='1'>\n- Pos to Points from input \n- Mate selected matte RED to view what is selected (expression)"
  note_font "Source Code Pro Light"
  note_font_size 40
  xpos 329
  ypos 1016
  bdwidth 684
  bdheight 559
 }
 BackdropNode {
  inputs 0
  name BackdropNode7
  tile_color 0x23232301
  label "<center><font size='5'></font><font color=#ee453c> Matte Combining\n</center><font size='1'>\n- Pos to Points from input \n- Mate selected matte RED to view what is selected (expression)"
  note_font "Source Code Pro Light"
  note_font_size 40
  xpos 1133
  ypos 1195
  bdwidth 815
  bdheight 441
 }
 BackdropNode {
  inputs 0
  name BackdropNode8
  tile_color 0x23232301
  label "<center><font size='5'></font><font color=#ee453c> 2D visualization\n</center><font size='1'>\n- Creates a 2D overlay visualization for viewer"
  note_font "Source Code Pro Light"
  note_font_size 40
  xpos 1133
  ypos 1675
  bdwidth 815
  bdheight 441
 }
 Input {
  inputs 0
  name Input
  xpos 1302
  ypos -538
 }
 Dot {
  name Dot21
  note_font_size 35
  note_font_color 0xffffff
  xpos 1336
  ypos -318
 }
set Ne070100 [stack 0]
 Dot {
  name Dot1
  note_font_size 35
  note_font_color 0xffffff
  xpos 555
  ypos -318
 }
 Shuffle {
  in none
  name Shuffle2
  label "<b>\[value in]</b> &rarr; \[value out]"
  xpos 521
  ypos -236
 }
 Dot {
  name Dot3
  note_font_size 35
  note_font_color 0xffffff
  xpos 555
  ypos 378
 }
set N7ebc7900 [stack 0]
 Expression {
  channel0 {rgba.red -rgba.green rgba.blue none}
  expr3 "falloff_amount*sqrt(pow2(light.position.x-\[value Shuffle2.in].red) + pow2(light.position.y-\[value Shuffle2.in].green) + pow2(light.position.z-\[value Shuffle2.in].blue))"
  name FALLOFF1
  xpos 1176
  ypos 374
 }
 Dot {
  name Dot16
  note_font_size 35
  note_font_color 0xffffff
  xpos 1210
  ypos 490
 }
set Ne020100 [stack 0]
 Dot {
  name Dot14
  note_font_size 35
  note_font_color 0xffffff
  xpos 1067
  ypos 490
 }
set Ne003900 [stack 0]
 Expression {
  expr3 clamp(1/(a*a*a),0,1)
  name Cubic1
  xpos 1033
  ypos 549
 }
push $Ne070100
 Shuffle {
  in none
  name Shuffle1
  label "<b>\[value in]</b> &rarr; \[value out]"
  xpos 1302
  ypos -236
 }
 Expression {
  temp_name0 vx
  temp_expr0 "(light.position.x-\[value Shuffle2.in].red)/sqrt( pow2(light.position.x-\[value Shuffle2.in].red) + pow2(light.position.y-\[value Shuffle2.in].green) + pow2(light.position.z-\[value Shuffle2.in].blue))"
  temp_name1 vy
  temp_expr1 "(light.position.y-\[value Shuffle2.in].green)/sqrt( pow2(light.position.x-\[value Shuffle2.in].red) + pow2(light.position.y-\[value Shuffle2.in].green) + pow2(light.position.z-\[value Shuffle2.in].blue))"
  temp_name2 vz
  temp_expr2 "(light.position.z-\[value Shuffle2.in].blue)/sqrt( pow2(light.position.x-\[value Shuffle2.in].red) + pow2(light.position.y-\[value Shuffle2.in].green) + pow2(light.position.z-\[value Shuffle2.in].blue))"
  channel3 {-rgba.red -rgba.green -rgba.blue rgba.alpha}
  expr3 "(\[value Shuffle1.in].red*vx +\[value Shuffle1.in].green*vy + \[value Shuffle1.in].blue*vz)*1"
  name POINTLIGHT
  xpos 1302
  ypos 62
  addUserKnob {20 User}
  addUserKnob {13 lightPos l "light position"}
  lightPos {{input1.translate} {input1.translate} {input1.translate}}
 }
 Clamp {
  channels alpha
  name Clamp1
  xpos 1302
  ypos 368
 }
 Dot {
  name Dot9
  note_font_size 35
  note_font_color 0xffffff
  xpos 1336
  ypos 625
 }
set N786b8100 [stack 0]
 Dot {
  name Dot10
  note_font_size 35
  note_font_color 0xffffff
  xpos 1337
  ypos 673
 }
set N786b8f00 [stack 0]
 Merge2 {
  inputs 2
  operation multiply
  mix {{falloff_amount}}
  name Multiply1
  label "mix: \[value mix] (\[value bbox])"
  xpos 1033
  ypos 663
 }
 Dot {
  name Dot19
  note_font_size 35
  note_font_color 0xffffff
  xpos 1067
  ypos 808
 }
push $Ne003900
 Dot {
  name Dot15
  note_font_size 35
  note_font_color 0xffffff
  xpos 907
  ypos 490
 }
 Expression {
  expr3 clamp(1/pow2(a),0,1)
  name Quadratic
  xpos 873
  ypos 549
 }
push $N786b8f00
 Dot {
  name Dot24
  note_font_size 35
  note_font_color 0xffffff
  xpos 1337
  ypos 745
 }
set N79ed8100 [stack 0]
 Merge2 {
  inputs 2
  operation multiply
  mix {{falloff_amount}}
  name Multiply2
  label "mix: \[value mix] (\[value bbox])"
  xpos 873
  ypos 735
 }
 Dot {
  name Dot8
  note_font_size 35
  note_font_color 0xffffff
  xpos 908
  ypos 882
 }
push $Ne020100
 Expression {
  expr3 clamp(1/a,0,1)
  name Linear
  xpos 1176
  ypos 542
 }
push $N786b8100
 Merge2 {
  inputs 2
  operation multiply
  mix {{falloff_amount}}
  name Multiply
  label "mix: \[value mix] (\[value bbox])"
  xpos 1176
  ypos 615
 }
 Dot {
  name Dot18
  note_font_size 35
  note_font_color 0xffffff
  xpos 1210
  ypos 784
 }
push $N79ed8100
 Switch {
  inputs 4
  which {{output}}
  name Switch1
  xpos 1302
  ypos 878
 }
 Dot {
  name Dot23
  note_font_size 35
  note_font_color 0xffffff
  xpos 1336
  ypos 1098
 }
set Ndfe7900 [stack 0]
 Dot {
  name Dot2
  xpos 775
  ypos 1098
 }
 Expression {
  channel0 {rgba.red -rgba.green -rgba.blue none}
  expr0 a
  channel1 {-rgba.red rgba.green rgba.blue none}
  expr1 0
  channel2 {-rgba.red -rgba.green -rgba.blue rgba.alpha}
  expr2 1
  channel3 none
  name Expression1
  xpos 741
  ypos 1310
 }
push $N7ebc7900
 Dot {
  name Dot11
  xpos 555
  ypos 1440
 }
 PositionToPoints {
  inputs 2
  display textured
  selectable false
  render_mode off
  cast_shadow false
  receive_shadow false
  detail {{parent.detail}}
  pointSize {{parent.pointSize}}
  name PositionToPoints1
  xpos 741
  ypos 1436
  disable {{!in3D x1 1}}
 }
 Dot {
  name Dot22
  xpos 775
  ypos 2247
 }
push $Ndfe7900
push $Ne070100
 Dot {
  name Dot20
  note_font_size 35
  note_font_color 0xffffff
  xpos 2194
  ypos -318
 }
 Shuffle {
  in alpha
  red white
  out alpha
  name IF_NO_ALPHA1
  xpos 2160
  ypos -226
  disable {{"\[string first \".alpha\" \[channels \[input this 0]]]>-1\n\n"}}
 }
 Dot {
  name Dot4
  xpos 2194
  ypos 1363
 }
set Ndfbf200 [stack 0]
 ChannelMerge {
  inputs 2
  operation in
  name ChannelMerge2
  selected true
  xpos 1302
  ypos 1346
  disable {{replace}}
 }
push $Ndfbf200
 Dot {
  name Dot5
  note_font_size 35
  note_font_color 0xffffff
  xpos 2194
  ypos 1500
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy2
  xpos 1302
  ypos 1490
 }
 Dot {
  name Dot6
  note_font_size 35
  note_font_color 0xffffff
  xpos 1336
  ypos 1882
 }
set Ndfbd600 [stack 0]
 Dot {
  name Dot7
  note_font_size 35
  note_font_color 0xffffff
  xpos 1494
  ypos 1882
 }
set Ndfbcf00 [stack 0]
 Shuffle {
  red alpha
  green alpha
  blue alpha
  name Shuffle4
  label "<b>\[value in]</b> &rarr; \[value out]"
  xpos 1621
  ypos 1868
 }
 Grade {
  multiply {{overlayCC} {overlayCC} {overlayCC} 0}
  white_clamp true
  name Grade2
  xpos 1621
  ypos 2054
 }
push $Ndfbcf00
 Merge2 {
  inputs 2
  output rgb
  mix {{mixcc}}
  name Merge1
  label "mix: \[value mix] (\[value bbox])"
  xpos 1460
  ypos 2048
 }
push $Ndfbd600
 Switch {
  inputs 2
  which {{parent.overlay}}
  name Switch4
  xpos 1302
  ypos 2054
 }
 Switch {
  inputs 2
  which {{in3D}}
  name Switch2
  xpos 1302
  ypos 2244
 }
 Output {
  name Output1
  xpos 1302
  ypos 2318
 }
 Input {
  inputs 0
  name light
  xpos 1060
  ypos -538
  number 1
  addUserKnob {20 User}
  addUserKnob {13 position}
  position {{input1.translate} {input1.translate} {input1.translate}}
 }
end_group
