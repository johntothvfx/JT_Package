Group {
 inputs 2
 name CopyHSL6
 help "Copies the hue,saturation or luminance from A to B or from B to A based on a mix."
 knobChanged "n = nuke.thisNode()\nk = nuke.thisKnob()\n\n\n\nif k.name() == 'inputChange':\n    classList = \['DeepToImage','DeepToImage2','DeepToImage3','ReLight']\n#    classListDenied = \['Scene','Scene1','Axis','Axis2','Axis3','Axis4','Card','Card2','Card3','Cube','Cube2','Cube3','Cylinder','Cylinder2','Cylinder3','DepthToPoints','ModelBuilder','PointCloudGenerator','PositionToPoints','PositionToPoints2','PositionToPoints3','PoissonMesh','Sphere','Sphere2','Sphere3']\n    if n.input(0) is not None:\n        if 'Deep' in n.input(0).Class() not in classList:\n           n.setInput(0, None)\n\n    if n.input(1) is not None:\n        if 'Deep' in n.input(1).Class() not in classList:\n           n.setInput(1, None)\n\n    if n.input(2) is not None:\n        if 'Deep' in n.input(2).Class() not in classList:\n           n.setInput(2, None)"
 tile_color 0x7aa9ffff
 note_font_color 0xffffffff
 selected true
 addUserKnob {20 CopyHSL}
 addUserKnob {1 CLASSIFICATION +INVISIBLE}
 CLASSIFICATION CopyHSL
 addUserKnob {4 copy t "<b>A to B:</b> transfers data from A input to B.\n\n<b>B to A:</b> transfers data from A input to B " M {"A to B" "B to A" "" "" "" "" "" "" "" "" "" "" "" "" ""}}
 addUserKnob {4 bbox l "set bbox to" t "Output bounding box. Any data out of this region is clipped off" M {union A B "" "" "" "" ""}}
 addUserKnob {26 space001 l "" +STARTLINE T "\t "}
 addUserKnob {7 hue t "The color or shade in an image, represented as an angle on the color wheel."}
 hue 1
 addUserKnob {7 saturation t "The intensity or purity of a color, determining how vivid or dull the color appears."}
 saturation 1
 addUserKnob {7 luminance t "The brightness or lightness of an image, representing the amount of light emitted or reflected."}
 addUserKnob {6 blackOutside l "black outside" t "The image whose edges outside the bounding box you want to fill with black. " +STARTLINE}
 blackOutside true
 addUserKnob {26 ""}
 addUserKnob {41 maskChannelMask l mask t "\nEnables the associated mask channel to the right. Disabling this checkbox is the same as setting the channel to none. \n\n\nThe channel to use as a mask. By default, the merge is limited to the non-black areas of this channel.\n" T MergeExpression1.maskChannelMask}
 addUserKnob {41 inject t "Copy mask to output mask.a channel." -STARTLINE T MergeExpression1.inject}
 addUserKnob {41 invert_mask l invert t "Inverts the use of the mask channel, so that the merge is limited to the non-white areas of the mask." -STARTLINE T MergeExpression1.invert_mask}
 addUserKnob {41 fringe t "When enabled, only apply the effect to the edge of the mask. \nWhen disabled, the effect is applied to the entire mask.\n\nuse 4*(1-mask)*mask to mix\n\n" -STARTLINE T MergeExpression1.fringe}
 addUserKnob {41 unpremult l "(un)premult by" t "Enables the associated channel to the right. Disabling this checkbox is the same as setting the channel to none. \n\nThe image is divided by this channel before being processed, and multiplied again afterwards. \nIf you are using premultiplied input images, you may want to check (un)premult by and select rgba.alpha here. This will simulate doing the merge before the premultiplication was done. \nIf you are using unpremultiplied input images, you should leave this set to none.\n" T MergeExpression1.unpremult}
 addUserKnob {41 invert_unpremult l invert -STARTLINE T MergeExpression1.invert_unpremult}
 addUserKnob {41 mix t "Dissolves between the original image at 0 and the full effect at 1." T MergeExpression1.mix}
 addUserKnob {1 operation +INVISIBLE}
 operation "\[value copy]"
 addUserKnob {20 info l Info}
 addUserKnob {26 version l "" t "Node version info, for more information look at version log" +STARTLINE T "<br><font size='5'>CopyHSL</font><font color=#7AA9FF> v1.2"}
 addUserKnob {26 ""}
 addUserKnob {26 steps l "" t "Overview of the node" +STARTLINE T "<br><strong>•</br> \n<b>CopyHSL</b> transfers the hue,saturation or<br>luminance from <b>A</b> to <b>B</b> or from<b> B</b> to <b>A</b><br>based on a mix.\n\n<br></b><i>\n<br><strong>•</br> This is perfect for transfering RGB color and<br>luminance data.\n</i>\n<br><br><b><a href=\"https://johntothvfx.com\" style=\"color:#7AA9FF;\">John Toth <b>© 2021 <br>\n"}
 addUserKnob {26 "" +STARTLINE}
 addUserKnob {22 demo l "<a href=\"https://johntothvfx.com\"><span style=\"color:#7AA9FF\">Tool Demo" t "Launches the web page where it will have more documentation or a video about the node." +INVISIBLE T "nuke.message('coming soon')" +STARTLINE}
 addUserKnob {22 log l "<a href=\"https://johntothvfx.com\"><span style=\"color:#7AA9FF\">Version Log</a>\n" t "Contains information about this node.\n\n- classification\n- context\n- date last modified\n- developer notes\n- version number\n- version log\n- year made" -STARTLINE T "\nversion_number = \"1.2.2\"\ncontext = \"Color\"\nmodified_date = \"14th August 2024\"\ndeveloper = \"John Toth © 2021\"\nsite = \"<a href='https://johntothvfx.com'><span style='color:#BBBBBB'>\"\nlog = \"\"\"\n<br></i><b> v 1.0 </b><i>\n- copies Hue,Saturation or Luminance from either A to B / B to A\n<br></i><b> v 1.1 </b><i>\n- mask input was rebuilt to not create edge artefacts\n<br></i><b> v 1.2 </b><i>\n- internally optimization\n- user interface updated\n\"\"\"\nthank_you = \"special thanks for Daniel Velikov as this node is based of his but modified.\"\n\n# Retrieve node name\nname = nuke.thisNode()\['CLASSIFICATION'].getValue()\n\n# Message components\nheader = \"Version Log:\"\ndlm = \"<b>Date Last Modified: </b>\" + modified_date\nspace = \" \"\nenter = \"<br><br>\"\nupper = \"<b>\"\nlower = \"</b>\"\n\n# Formatted message\nmessage = (\n    f\"\{upper\}\{header\}\{enter\}\"\n    f\"Name: \{lower\}\{name\}<br>\"\n    f\"\{upper\}Version Number: \{lower\}\{version_number\}<br>\"\n    f\"\{upper\}Context: \{lower\}\{context\}\{enter\}\"\n    f\"\{dlm\}\{log\}<br>\"\n    f\"<b>Thank You:</b><br>\{thank_you\}<br>\{enter\}\"\n    f\"\{upper\}\{site\}\{developer\}\{lower\}</span></a>\"\n)\n\n# Display the message\nnuke.message(message)\n"}
}
 Input {
  inputs 0
  name A
  label "\[value number]"
  xpos 290
  ypos -352
  number 1
 }
 Dot {
  name Dot3
  note_font_size 35
  note_font_color 0xffffff
  xpos 324
  ypos 18
 }
set N3f44d800 [stack 0]
 Input {
  inputs 0
  name B
  label "\[value number]"
  xpos 606
  ypos -352
 }
 Dot {
  name Dot5
  note_font_size 35
  note_font_color 0xffffff
  xpos 640
  ypos -150
 }
set N3f450a00 [stack 0]
 Dot {
  name Dot4
  note_font_size 35
  note_font_color 0xffffff
  xpos 826
  ypos -150
 }
 Switch {
  inputs 2
  which {{"parent.bbox == 1 ? 1 : 0"}}
  name Switch1
  label "\n"
  xpos 792
  ypos 15
 }
 Dot {
  name Dot2
  note_font_size 35
  note_font_color 0xffffff
  xpos 826
  ypos 880
 }
 Input {
  inputs 0
  name mask
  knobChanged "\n"
  label "\[value number]"
  xpos 950
  ypos -352
  number 2
  addUserKnob {20 mask_1 l mask}
  addUserKnob {6 maskInput l mask +STARTLINE}
  maskInput {{"\[exists input2.disable]"}}
 }
 Dot {
  name Dot6
  note_font_size 35
  note_font_color 0xffffff
  xpos 984
  ypos 618
 }
push $N3f450a00
 Dot {
  name Dot14
  note_font_size 35
  note_font_color 0xffffff
  xpos 640
  ypos 234
 }
set N3f452400 [stack 0]
push $N3f44d800
 Dot {
  name Dot15
  note_font_size 35
  note_font_color 0xffffff
  xpos 324
  ypos 234
 }
set N3f452800 [stack 0]
 Switch {
  inputs 2
  which {{parent.copy}}
  name Switch2
  xpos 290
  ypos 326
 }
 Colorspace {
  colorspace_out HSV
  name Colorspace1
  xpos 290
  ypos 542
 }
 Dot {
  name Dot1
  note_font_size 35
  note_font_color 0xffffff
  xpos 324
  ypos 618
 }
push $N3f452800
push $N3f452400
 Switch {
  inputs 2
  which {{parent.copy}}
  name Switch3
  xpos 606
  ypos 326
 }
 Colorspace {
  colorspace_out HSV
  name Colorspace2
  xpos 606
  ypos 543
 }
 MergeExpression {
  inputs 2+1
  expr0 "lerp(Br , Ar, parent.hue)"
  expr1 "lerp(Bg , Ag, parent.saturation)"
  expr2 "lerp(Bb , Ab, parent.luminance)"
  maskChannelInput -rgba.alpha
  name MergeExpression1
  selected true
  xpos 606
  ypos 615
 }
 Colorspace {
  colorspace_in HSV
  name Colorspace3
  xpos 606
  ypos 686
 }
 CopyBBox {
  inputs 2
  name CopyBBox1
  xpos 606
  ypos 876
  disable {{"parent.bbox == 0 ? 1 : 0"}}
 }
 BlackOutside {
  name BlackOutside1
  xpos 606
  ypos 926
  disable {{!parent.blackOutside}}
 }
 Output {
  name Output
  xpos 606
  ypos 1070
 }
end_group
