NoOp {
 name ColorSampler1
 onCreate nuke.thisNode().knob('sample').setFlag(nuke.NO_ANIMATION)
 knobChanged "n=nuke.thisNode()\nk = nuke.thisKnob()\n\nif k.name() == 'sample' and k.isAnimated() == False:\n \n    i = k.value()\n        \n    px = int(i\[0])\n    py = int(i\[1])\n    \n    r = n.sample('red', px, py)\n    g = n.sample('green', px,py)\n    b = n.sample('blue', px, py)\n    \n    \n    n\['color'].setValue(\[r,g,b])\n\n\n"
 tile_color 0x7aa9ffff
 selected true
 addUserKnob {20 ColorSampler l "Color Sampler"}
 addUserKnob {1 CLASSIFICATION +INVISIBLE}
 CLASSIFICATION ColorSampler
 addUserKnob {12 sample t "Using the XY coordination of sampling the values of a pixel."}
 addUserKnob {18 color t "Displays the sampled pixel coordination color values."}
 color {0 0 0}
 addUserKnob {6 color_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 value_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 pixelValues_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {22 export t "Export the a new colorSampler node but this time it's more vanilla and the color is driven from a TCL expression." T "# John Toth\n\n# Defining shortcuts\nn = nuke.thisNode()\n\n#position of nodes to when exported\nx_pos = n.xpos() + 100\ny_pos = n.ypos() + 75\n\n\n#knobs to create\ntab = nuke.Tab_Knob ('colorSampler', 'Color Sampler',)\nsample = nuke.XY_Knob ('sample', 'sample')\ncolor = nuke.Color_Knob('color', 'color')\n\n# create ColorSampler (TCL) version of this node node\nSampler = nuke.nodes.NoOp()\nSampler\['tile_color'].setValue(1131596031)\nSampler.setName('ColorSampler')\nSampler\['label'].setValue('''(TCL)''')\nSampler.setXpos(x_pos)\nSampler.setYpos(y_pos)\nSampler.setInput(0, None)\nSampler.addKnob(tab)\nSampler.addKnob(sample)\nSampler.addKnob(color)\nSampler\['color'].setExpression('\[sample this red sample.x sample.y]', 0)\nSampler\['color'].setExpression('\[sample this green sample.x sample.y]', 1)\nSampler\['color'].setExpression('\[sample this blue sample.x sample.y]', 2)\n\n\n\n\n\n" +STARTLINE}
 addUserKnob {20 info l Info}
 addUserKnob {26 version l "" +STARTLINE T "<br><font size='5'>Channel Sampler</font><font color=#7AA9FF> v1.0"}
 addUserKnob {26 ""}
 addUserKnob {26 bulletpoints l "" t "overview of the node" +STARTLINE T "<br><strong>•</br> \n<b>Color Sampler</b> will sample a pixel coordinate<br>and will grab that pixel color data.\n\n<br></b>\n\n\n\n</i>\n<br><br><b><a href=\"https://johntothvfx.com\" style=\"color:#7AA9FF;\">John Toth <b>© 2023 <br>"}
 addUserKnob {26 ""}
 addUserKnob {22 demo l "<a href=\"https://johntothvfx.com\"><span style=\"color:#7AA9FF\">Tool Demo" t "Launches the web page where it will have more documentation or a video about the node." +INVISIBLE T "nuke.message('coming soon')" +STARTLINE}
 addUserKnob {22 log l "<a href=\"https://johntothvfx.com\"><span style=\"color:#7AA9FF\">Version Log</a>\n" t "contains information about this node.\n\n- classification\n- context\n- date last modified\n- developer notes\n- version number\n- version log\n- year made" -STARTLINE T "\nversion_number = \"1.1.3\"\ncontext = \"Color\"\nmodified_date = \"16th September 2024\"\ndeveloper = \"John Toth © 2023\"\nsite = \"<a href='https://johntothvfx.com'><span style='color:#BBBBBB'>\"\nlog = \"\"\"\n<br></i><b> v 1.0 </b><i>\n- samples the color of a pixel coordinate\n\"\"\"\nthank_you = \"\"\n\n# Retrieve node name\nname = nuke.thisNode()\['CLASSIFICATION'].getValue()\n\n# Message components\nheader = \"Version Log:\"\ndlm = \"<b>Date Last Modified: </b>\" + modified_date\nspace = \" \"\nenter = \"<br><br>\"\nupper = \"<b>\"\nlower = \"</b>\"\n\n# Formatted message\nmessage = (\n    f\"\{upper\}\{header\}\{enter\}\"\n    f\"Name: \{lower\}\{name\}<br>\"\n    f\"\{upper\}Version Number: \{lower\}\{version_number\}<br>\"\n    f\"\{upper\}Context: \{lower\}\{context\}\{enter\}\"\n    f\"\{dlm\}\{log\}<br>\"\n    #f\"<b>Thank You:</b><br>\{thank_you\}<br>\{enter\}\"\n    f\"\{upper\}\{site\}\{developer\}\{lower\}</span></a>\"\n)\n\n# Display the message\nnuke.message(message)\n"}
}
