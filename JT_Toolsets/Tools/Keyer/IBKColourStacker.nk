Group {
 name IBKColourStacker1
 tile_color 0x9900ff
 selected true
 addUserKnob {20 IBKColourStacker l "IBKColour Stacker"}
 addUserKnob {1 CLASSIFICATION +INVISIBLE}
 CLASSIFICATION IBKColourStacker
 addUserKnob {4 screen_type l screen M {"10027263\tGreen" "4194303\tBlue" "" "" "" "" "" "" "" "" "" ""}}
 addUserKnob {41 Size l size T IBKController.Size}
 addUserKnob {41 off l darks T IBKController.off}
 addUserKnob {41 mult l lights T IBKController.mult}
 addUserKnob {26 ""}
 addUserKnob {41 erode T IBKController.erode}
 addUserKnob {26 ""}
 addUserKnob {41 iteration l stack T menu.iteration}
 addUserKnob {7 mix}
 mix 1
 addUserKnob {26 ""}
 addUserKnob {1 output l INVISIBLE +INVISIBLE}
 output "\[knob tile_color \[value screen_type]]\[value iteration]"
 addUserKnob {20 info l Info}
 addUserKnob {26 version l "" +STARTLINE T "<br><font size='5'>IBKColour Stacker</font><font color=#53ce53> v1.0"}
 addUserKnob {26 ""}
 addUserKnob {26 bulletpoints l "" +STARTLINE T "<br><strong>•</br> \n<b>IBKColour Stacker</b> will stack the<br>result of your IBK settings to fill the<br>gaps.\n\n</i><br><br><b><a href=\"https://johntothvfx.com\" style=\"color:#53ce53;\">John Toth <b>© 2023 <br>"}
 addUserKnob {26 ""}
 addUserKnob {22 demo l "<a href=\"https://johntothvfx.com\"><span style=\"color:#53ce53\">Tool Demo" t "Launches the web page where it will have more documentation or a video about the node." +INVISIBLE T "nuke.message(\"coming soon\")" +STARTLINE}
 addUserKnob {22 log l "<a href=\"https://johntothvfx.com\"><span style=\"color:#53ce53\">Version Log</a>\n" t "contains information about this node.\n\n- classification\n- context\n- date last modified\n- developer notes\n- version number\n- version log\n- year made" -STARTLINE T "\nname = nuke.thisNode()\['CLASSIFICATION'].getValue()\nversion_number = \"1.0.7\"\ncontext = \"Keyer\"\n\n\ndate = \"22th June\"\nyear = \" 2024\"\n\ndeveloper = \"John Toth © 2023\"\nsite = \"<a href='https://johntothvfx.com'> <span style='color:#BBBBBB'>\"\n\n\n\nlog = \"\"\"\n<br></i><b> v 1.0 </b><i>\n- fills black with the IBKcolour settings by stacking it.\n\"\"\"\n\n\n\nthankyou = \"\"\"\n\"\"\"\n\n\n\"\"\"Do not touch section below\"\"\"\nheader = \"Version Log:\"\nDLM = \"<b>Date Last Modified: </b>\" + date + year\n\nSPACE = \" \"\nENTER = \"<br><br>\"\nUPPER = \"<b>\"\nLOWER = \"</b>\"\n\n\n\nnuke.message(UPPER + header + ENTER + \"Name: \" + LOWER + name + \"<br>\" + UPPER + \"Version Number: \" + LOWER + version_number + \"<br>\" + UPPER + \"Context: \" + LOWER + context + ENTER + DLM + log + \"</i>\" + \"<br>\" + UPPER + site + developer + \"</a>\") \n\n\n"}
}
 BackdropNode {
  inputs 0
  name BackdropNode1
  tile_color 0x222222ff
  label "<center>Forces the alpha and error fix for controller"
  note_font "DejaVu Sans"
  note_font_size 24
  xpos -1024
  ypos -1058
  bdwidth 288
  bdheight 204
 }
 BackdropNode {
  inputs 0
  name BackdropNode2
  tile_color 0x23232301
  label "<center>Don't Touch\n\n"
  note_font "Source Code Pro Light"
  note_font_size 40
  note_font_color 0xee453cff
  xpos -1702
  ypos -1172
  bdwidth 480
  bdheight 192
 }
 BackdropNode {
  inputs 0
  name BackdropNode3
  tile_color 0x222222ff
  label "<center>Stencil out any unwanted pixels colours"
  note_font "DejaVu Sans"
  note_font_size 24
  xpos -1011
  ypos -483
  bdwidth 522
  bdheight 206
 }
 BackdropNode {
  inputs 0
  name BackdropNode4
  tile_color 0x222222ff
  label "<center>Keymix the original IBKColour \"Stack 0\""
  note_font "Source Code Pro Light"
  note_font_size 24
  xpos -1021
  ypos 1806
  bdwidth 282
  bdheight 180
 }
 BackdropNode {
  inputs 0
  name BackdropNode5
  tile_color 0x222222ff
  label "<center>Main IBKColour controller for the stacks "
  note_font "DejaVu Sans"
  note_font_size 24
  xpos -1000
  ypos -784
  bdwidth 241
  bdheight 224
 }
 Input {
  inputs 0
  name Stencil
  label "\[value number]"
  xpos -621
  ypos -1164
  number 1
 }
 Expression {
  expr3 "a>0.1? 1:0"
  name Expression1
  label "Creating Hard Alpha\nvalue of 0 or 1"
  xpos -621
  ypos -347
 }
 Input {
  inputs 0
  name Input
  label "\[value number]"
  xpos -921
  ypos -1164
 }
 AddChannels {
  channels rgb
  name AddChannels1
  label "adding to stop Error"
  xpos -921
  ypos -972
 }
 Dot {
  name Dot3
  note_font_size 35
  note_font_color 0xffffff
  xpos -887
  ypos -818
 }
set N2fd3b400 [stack 0]
 IBKColourV3 {
  name IBKController
  label "CONTROLLER\nsize : \[value Size]\nerode : \[value erode]\npatch black : \[value multi]"
  xpos -920
  ypos -676
  screen_type {{parent.parent.screen_type}}
 }
 Merge2 {
  inputs 2
  operation stencil
  bbox B
  name Merge2
  label "mix: \[value mix] (\[value bbox])"
  xpos -921
  ypos -341
 }
 Dot {
  name Dot6
  note_font_size 35
  note_font_color 0xffffff
  xpos -887
  ypos -242
 }
set N2fb5fa00 [stack 0]
 Dot {
  name Dot5
  note_font_size 35
  note_font_color 0xffffff
  xpos -587
  ypos -242
 }
 Dot {
  name Dot4
  note_font_size 35
  note_font_color 0xffffff
  xpos -587
  ypos 1914
 }
push $N2fd3b400
 Dot {
  name Dot2
  note_font_size 35
  note_font_color 0xffffff
  xpos -1137
  ypos -818
 }
 Dot {
  name Dot1
  note_font_size 35
  note_font_color 0xffffff
  xpos -1137
  ypos 1914
 }
push $N2fb5fa00
 NoOp {
  name Begin
  tile_color 0x3066ff
  xpos -921
  ypos -174
 }
 NoOp {
  name End
  tile_color 0x3066ff
  xpos -921
  ypos 1742
 }
 Keymix {
  inputs 3
  channels rgba
  mix {{parent.mix}}
  bbox B
  name Keymix1
  xpos -921
  ypos 1910
 }
 Output {
  name Output1
  xpos -921
  ypos 2226
 }
 Crop {
  inputs 0
  box {{min(SC_bbx.x,x)} {min(SC_bbx.y,y)} {max(SC_bbx.r,width)} {max(SC_bbx.t,height)}}
  intersect true
  crop false
  name SAFETY_INPUT_DATA
  xpos -1381
  ypos -1064
  addUserKnob {20 helptab l "Connection Tab"}
  addUserKnob {1 SC_input l "Safety Input Crop"}
  SC_input Input
  addUserKnob {22 findParent l find -STARTLINE T "SC_inputNode = nuke.toNode(nuke.thisNode().knob(\"SC_input\").value())\nnuke.zoom( 2, \[SC_inputNode.xpos(), SC_inputNode.ypos()])"}
  addUserKnob {15 SC_bbx l bbox +HIDDEN}
  SC_bbx {{"\[value SC_input].bbox.x"} {"\[value SC_input].bbox.y"} {"\[value SC_input].bbox.r"} {"\[value SC_input].bbox.t"}}
 }
 NoOp {
  inputs 0
  name menu
  onCreate "nuke.thisNode()\['iteration'].setFlag(0x0000000000000002)"
  knobChanged "grp = nuke.thisGroup()\nk = nuke.thisKnob()\n\n\n\nqualityLow = nuke.thisNode().knob('qualityLowEnd').getValue()\nqualityHigh = nuke.thisNode().knob('qualityHighEnd').getValue()\nqualityValue = int(nuke.thisNode().knob('iteration').getValue())\n\n\n     \nif k.name() == 'iteration' :\n    if qualityValue < qualityLow:\n        qualityValue = qualityLow\n    elif qualityValue > qualityHigh:\n          qualityValue = qualityHigh\n    grp\['iteration'].setValue(qualityValue)\n    \n\n      \n    iteration = int(grp\['iteration'].value())\n    \n    grp.begin()\n    begin = nuke.toNode('Begin')\n    end = nuke.toNode('End')\n    Xpos = begin.xpos()\n    Ypos = begin.ypos()\n    \n    for n in nuke.allNodes('IBKColourV3'):\n        if n.name() not in \['IBKController']:\n            nuke.delete(n)\n            \n    for n in nuke.allNodes('Crop'):\n        if n.name() not in \['SAFETY_INPUT_DATA']:\n            nuke.delete(n)\n            \n\n            \n    \n    new=\[]    \n    \n    for n in range(0,iteration):\n\n        IBK_Color=nuke.nodes.IBKColourV3(xpos = Xpos,ypos= Ypos+(n+1)*75)\n        IBK_Color.setName('IBKColourV3_'+str(n+1))\n        IBK_Color\['screen_type'].setExpression(\"parent.parent.IBKController.screen_type\")\n        IBK_Color\['Size'].setValue(\[0])\n        IBK_Color\['Size'].setExpression(\"parent.IBKController.Size\")\n        IBK_Color\['off'].setValue(\[0,0,0])\n        IBK_Color\['off'].setExpression('parent.IBKController.off')\n        IBK_Color\['mult'].setValue(\[0,0,0])\n        IBK_Color\['mult'].setExpression('parent.IBKController.mult')\n        IBK_Color\['erode'].setValue(\[0])\n        IBK_Color\['multi'].setExpression(\"0.5 * pow (2,int(\[string range \[value name] 12 end]))\")\n\n\n\n        \n        Crop=nuke.nodes.Crop()\n        Crop.setName('Crop_'+str(n+1))\n        Crop\['box'].setExpression(\"SAFETY_INPUT_DATA.box.x\", 0)\n        Crop\['box'].setExpression(\"SAFETY_INPUT_DATA.box.y\", 1)\n        Crop\['box'].setExpression(\"SAFETY_INPUT_DATA.box.r\", 2)\n        Crop\['box'].setExpression(\"SAFETY_INPUT_DATA.box.t\", 3)\n        Crop\['intersect'].setValue(1)\n\n \n        new.append(Crop)\n        Crop.setInput(0,IBK_Color)\n        IBK_Color.setInput(0,Crop)\n        if n != 0:\n            IBK_Color.setInput(0, new\[n-1])\n        else:\n            IBK_Color.setInput(0,begin)\n \n\n    end.setInput(0,Crop)\n"
  xpos -1611
  ypos -1064
  hide_input true
  addUserKnob {20 User}
  addUserKnob {7 iteration R 0 10}
  addUserKnob {26 qualityControl l "<b>Quality Control</b>"}
  addUserKnob {3 qualityLowEnd l quality t qualityLowEnd}
  addUserKnob {3 qualityHighEnd l "" -STARTLINE}
  qualityHighEnd 25
 }
end_group
