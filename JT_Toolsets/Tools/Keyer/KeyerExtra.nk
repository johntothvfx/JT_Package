Group {
 name KeyerExtra1
 help "This node allows the user to pull simple keyers through certain colourspace.You can use it to pull keys based on the input image’s: \n• red, green, or blue channel, \n• redscreen, greenscreen, or bluescreen, \n• luminance (the default), \n• saturation, or \n• maximum and minimum values. \nTo use this node, view the alpha channel in the Viewer. Then, use the <b>range</b> graph to adjust the low and high pixel values of the matte. The <b>A</b> handle determines the low or transparent values of the key: any pixels that fall below this value are clipped to black. The <b>B</b> handle determines your high or opaque values: pixel values above this setting are clipped to white. \nThe default positions let you control the low and high values, assuming your image has distinct light and dark areas. However, sometimes the subject of the matte falls into the “middle-gray” area; the <b>C</b> and <b>D</b> handles let you shift the center for the high values of the key."
 knobChanged "grp = nuke.thisGroup()\nk = nuke.thisKnob()\n\nif k.name() in ('pull', 'showPanel'):\n    CONTROLS_type = grp\['pull'].value()\n    if CONTROLS_type == 'test':\n        n\['test'].setVisible(True)\n    elif CONTROLS_type == 'test1':\n        n\['test'].setVisible(False)"
 tile_color 0xff00ff
 selected true
 addUserKnob {20 KeyerExtraTab l "Keyer Extra"}
 addUserKnob {1 CLASSIFICATION +INVISIBLE}
 CLASSIFICATION KeyerExtra
 addUserKnob {41 mode l colorspace t "Before keyer is applied the input goes through a certain colorspace.\n\n• <b>linear</b> - input goes through no colorspace and left as normal.\n\n• <b>Log</b> - Convert the input to Cineon log colorspace.\n\n• <b>OCIOLog</b> - The input gets converted to Log using the the OpenColorIOlibrary to convert from scene_linear to compositing_log.\n\n• <b>HSV</b> - The input get converted to HSV (Hue,Saturation & Value). Then value is shuffled out before the keyer is applied.\n\n• <b>Custom</b> - Allows the user to select which colorspace operation they want from the \"Colorspace\" node before the keyer is applied.\n" T menu.mode}
 addUserKnob {26 space000 l "" +STARTLINE +HIDDEN T "\t"}
 addUserKnob {7 test +HIDDEN}
 addUserKnob {4 customColorspace l custom t "If the colorspace is set to <b> Custom</b> you can use this knob to select which colorspace you would like the keyer be applied on.\n" +HIDDEN M {"gamma 1.80" "gamma 2.20" "gamma 2.40" "gamma 2.60" "red709 (~1.95)" "sRGB (~2.20)" Cineon Linear HSV HSL YPbPr YCbCR CIE-XYZ CIE-Yxy L*a*b CIE-LCH Panalog REDLog ViperLog AlexaV3LogC PLogLin SLog SLog1 SLog2 SLog3 CLog Log3G10 Log3G12 HybridLogGamma Protune BT1886 st2084 "" "" "" "" "" "" "" "" "" "" "" ""}}
 customColorspace YCbCR
 addUserKnob {6 preview l "preview colorspace" t "This will preview the custom colorspace selected.\n\nThis is for viewing purpose and checking the selected custom colorspace." -STARTLINE +HIDDEN}
 addUserKnob {4 customShuffle l "shuffle to" t "• <b>don't shuffle channels</b> - RGB will be left as they after the custom colorspace operation.\n\n• <b>all channals to red</b> - Green, Blue Channel will be shuffled into the Red Channel after the custom colorspace operation\n\n\n• <b>all channals to green</b> - Red, Blue Channel will be shuffled into the Green Channel after the custom colorspace operation\n\n\n• <b>all channals to blue</b> - Red, Green Channel will be shuffled into the Blue Channel after the custom colorspace operation" +HIDDEN M {"Don't shuffle channels" "All channals to red" "All channals to green" "All channals to blue" "" "" "" "" "" "" "" "" "" "" "" "" ""}}
 addUserKnob {26 ""}
 addUserKnob {41 input T Keyer9.input}
 addUserKnob {41 output T Keyer9.output}
 addUserKnob {41 combine l "" -STARTLINE T Keyer9.combine}
 addUserKnob {41 invert -STARTLINE T Keyer9.invert}
 addUserKnob {41 operation T Keyer9.operation}
 addUserKnob {41 range T Keyer9.range}
 addUserKnob {26 ""}
 addUserKnob {41 maskChannelMask l mask T Copy1.maskChannelMask}
 addUserKnob {41 inject -STARTLINE T Copy1.inject}
 addUserKnob {41 invert_mask l invert -STARTLINE T Copy1.invert_mask}
 addUserKnob {41 fringe -STARTLINE T Copy1.fringe}
 addUserKnob {20 info l Info}
 addUserKnob {26 version l "" +STARTLINE T "<br><font size='5'>\nKeyer Plus\n</font><font color=#53ce53> v1.3"}
 addUserKnob {26 ""}
 addUserKnob {26 bulletpoints l "" +STARTLINE T "<br><strong>•</br> \n<b>Keyer Plus</b> applies a colorspace<br>operation before the keyer is applied.\n\n</i><br><br><b><a href=\"https://johntothvfx.com\" style=\"color:#53ce53;\">John Toth <b>© 2018 <br>"}
 addUserKnob {26 ""}
 addUserKnob {22 demo l "<a href=\"https://johntothvfx.com\"><span style=\"color:#53ce53\">Tool Demo" t "Launches the web page where it will have more documentation or a video about the node." +INVISIBLE T "nuke.message(\"coming soon\")" +STARTLINE}
 addUserKnob {22 log l "<a href=\"https://johntothvfx.com\"><span style=\"color:#53ce53\">Version Log</a>\n" t "contains information about this node.\n\n- classification\n- context\n- date last modified\n- developer notes\n- version number\n- version log\n- year made" -STARTLINE T "\nname = nuke.thisNode()\['CLASSIFICATION'].getValue()\nversion_number = \"1.3.1\"\ncontext = \"Keyer\"\n\n\ndate = \"21th June\"\nyear = \" 2024\"\n\ndeveloper = \"John Toth © 2018\"\nsite = \"<a href='https://johntothvfx.com'> <span style='color:#BBBBBB'>\"\n\n\n\nlog = \"\"\"\n<br></i><b> v 1.0 </b><i>\n- keying through a colorspace\n<br></i><b> v 1.1 </b><i>\n- mask input was added\n<br></i><b> v 1.2 </b><i>\n- mask input now does not error the node if the mask no alpha\n- now has same option as normal mask selection\n<br></i><b> v 1.3 </b><i>\n- update on the user interface\n- more colorspace option was added (including the custom option - based on fxt_Keyer)\n\"\"\"\n\n\n\nthankyou = \"\"\"\n\"\"\"\n\n\n\"\"\"Do not touch section below\"\"\"\nheader = \"Version Log:\"\nDLM = \"<b>Date Last Modified: </b>\" + date + year\n\nSPACE = \" \"\nENTER = \"<br><br>\"\nUPPER = \"<b>\"\nLOWER = \"</b>\"\n\n\n\nnuke.message(UPPER + header + ENTER + \"Name: \" + LOWER + name + \"<br>\" + UPPER + \"Version Number: \" + LOWER + version_number + \"<br>\" + UPPER + \"Context: \" + LOWER + context + ENTER + DLM + log + \"</i>\" + \"<br>\" + UPPER + site + developer + \"</a>\") \n\n\n"}
}
 BackdropNode {
  inputs 0
  name BackdropNode2
  tile_color 0x23232301
  label "<center>Don't Touch\n\n"
  note_font "Source Code Pro Light"
  note_font_size 40
  note_font_color 0xee453cff
  xpos 526
  ypos -1039
  bdwidth 268
  bdheight 158
 }
 Input {
  inputs 0
  name Input
  xpos 180
  ypos -1114
 }
 Dot {
  name Dot4
  note_font_size 35
  note_font_color 0xffffff
  xpos 214
  ypos -750
 }
set Naf6c3a00 [stack 0]
 Dot {
  name Dot1
  note_font_size 35
  note_font_color 0xffffff
  xpos 414
  ypos -750
 }
set Naf6c4000 [stack 0]
 Dot {
  name Dot2
  note_font_size 35
  note_font_color 0xffffff
  xpos 654
  ypos -750
 }
set Naf6c4600 [stack 0]
 Dot {
  name Dot3
  note_font_size 35
  note_font_color 0xffffff
  xpos 874
  ypos -750
 }
set Naf796200 [stack 0]
 Dot {
  name Dot15
  note_font_size 35
  note_font_color 0xffffff
  xpos 1094
  ypos -750
 }
set Naf796800 [stack 0]
 Dot {
  name Dot7
  note_font_size 35
  note_font_color 0xffffff
  xpos 1314
  ypos -750
 }
 Colorspace {
  colorspace_out {{parent.customColorspace}}
  name Colorspace1
  label Custom
  xpos 1280
  ypos -664
 }
 Dot {
  name Dot6
  note_font_size 35
  note_font_color 0xffffff
  xpos 1314
  ypos -534
 }
set Naf797a00 [stack 0]
 Dot {
  name Dot5
  note_font_size 35
  note_font_color 0xffffff
  xpos 1424
  ypos -534
 }
set Naf5cf800 [stack 0]
 Dot {
  name Dot8
  note_font_size 35
  note_font_color 0xffffff
  xpos 1534
  ypos -534
 }
set Naf5cfe00 [stack 0]
 Dot {
  name Dot12
  note_font_size 35
  note_font_color 0xffffff
  xpos 1644
  ypos -534
 }
set Naf7ab800 [stack 0]
 Shuffle {
  red blue
  green blue
  alpha blue
  name Shuffle4
  tile_color 0xffff
  label "<b>\[value in]</b> &rarr; \[value out]"
  xpos 1610
  ypos -452
 }
push $Naf5cfe00
 Shuffle {
  red green
  blue green
  alpha green
  name Shuffle1
  tile_color 0xff00ff
  label "<b>\[value in]</b> &rarr; \[value out]"
  xpos 1500
  ypos -452
 }
push $Naf5cf800
 Shuffle {
  green red
  blue red
  alpha red
  name Shuffle2
  tile_color 0xff0000ff
  label "<b>\[value in]</b> &rarr; \[value out]"
  xpos 1390
  ypos -452
 }
push $Naf797a00
 Switch {
  inputs 4
  which {{parent.customShuffle}}
  name Switch2
  xpos 1280
  ypos -274
 }
 Dot {
  name Dot9
  note_font_size 35
  note_font_color 0xffffff
  xpos 1314
  ypos -102
 }
push $Naf796800
 Colorspace {
  colorspace_out HSV
  name Colorspace
  label HSV
  xpos 1060
  ypos -664
 }
 Shuffle {
  red blue
  green blue
  alpha blue
  name Shuffle5
  tile_color 0xffff
  label "<b>\[value in]</b> &rarr; \[value out]"
  xpos 1060
  ypos -452
 }
 Dot {
  name Dot16
  note_font_size 35
  note_font_color 0xffffff
  xpos 1094
  ypos -246
 }
push $Naf796200
 OCIOLogConvert {
  operation "lin to log"
  name OCIOLogConvert1
  xpos 840
  ypos -658
 }
 Dot {
  name Dot10
  note_font_size 35
  note_font_color 0xffffff
  xpos 874
  ypos -318
 }
push $Naf6c4600
 Log2Lin {
  operation lin2log
  name Log2Lin10
  xpos 620
  ypos -658
 }
 Dot {
  name Dot11
  note_font_size 35
  note_font_color 0xffffff
  xpos 654
  ypos -390
 }
push $Naf6c4000
 Switch {
  inputs 5
  which {{menu.mode}}
  name Switch1
  xpos 380
  ypos -106
 }
 Keyer {
  operation "luminance key"
  name Keyer9
  knobChanged "n = nuke.thisNode()\nk = nuke.thisKnob()\n\nif k.name() == 'output':\n    nuke.toNode('Copy1')\['channels'].fromScript(k.toScript())\n    nuke.toNode('Copy1')\['channels'].enableChannel(4, False)\n    \n    nuke.toNode('Copy2')\['from0'].fromScript(k.toScript())\n    nuke.toNode('Copy2')\['from0'].enableChannel(4, False)"
  xpos 380
  ypos 31
 }
set Naf24da00 [stack 0]
push $Naf7ab800
 Dot {
  name Dot14
  note_font_size 35
  note_font_color 0xffffff
  xpos 1754
  ypos -534
 }
 Dot {
  name Dot13
  note_font_size 35
  note_font_color 0xffffff
  xpos 1754
  ypos 186
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy2
  xpos 380
  ypos 179
 }
 Input {
  inputs 0
  name Mask
  label "\[value number]"
  xpos 24
  ypos 31
  number 1
 }
push $Naf24da00
push $Naf6c3a00
 Shuffle {
  alpha black
  name Shuffle3
  label "<b>\[value in]</b> &rarr; \[value out]"
  xpos 180
  ypos -332
 }
 Copy {
  inputs 2+1
  channels alpha
  name Copy1
  xpos 180
  ypos 26
 }
 Switch {
  inputs 2
  which {{"menu.mode > 3  ? parent.preview : 0"}}
  name Switch3
  xpos 180
  ypos 183
 }
 Output {
  name Output1
  xpos 180
  ypos 398
 }
 NoOp {
  inputs 0
  name menu
  knobChanged "n = nuke.thisGroup()\nk = nuke.thisKnob()\n\nif k.name() in ('mode', 'showPanel'):\n    CONTROLS_type = n\['mode'].value()\n    if CONTROLS_type == 'Custom':\n        n\['customColorspace'].setVisible(True)\n        n\['preview'].setVisible(True)\n        n\['customShuffle'].setVisible(True)\n        n\['space000'].setVisible(True)\n    elif CONTROLS_type == 'HSV':\n        n\['customColorspace'].setVisible(False)\n        n\['preview'].setVisible(False)\n        n\['customShuffle'].setVisible(False)\n        n\['space000'].setVisible(False)\n    elif CONTROLS_type == 'OCIOLog':\n        n\['customColorspace'].setVisible(False)\n        n\['preview'].setVisible(False)\n        n\['customShuffle'].setVisible(False)\n        n\['space000'].setVisible(False)\n    elif CONTROLS_type == 'Log':\n        n\['customColorspace'].setVisible(False)\n        n\['preview'].setVisible(False)\n        n\['customShuffle'].setVisible(False)\n        n\['space000'].setVisible(False)\n    elif CONTROLS_type == 'Linear':\n        n\['customColorspace'].setVisible(False)\n        n\['preview'].setVisible(False)\n        n\['customShuffle'].setVisible(False)\n        n\['space000'].setVisible(False)\n\n"
  xpos 620
  ypos -946
  hide_input true
  addUserKnob {20 menu}
  addUserKnob {4 mode l "" +STARTLINE M {Linear Log OCIOLog HSV Custom "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" ""}}
  mode Log
 }
end_group
