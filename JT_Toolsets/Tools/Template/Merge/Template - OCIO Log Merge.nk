BackdropNode {
 inputs 0
 name BackdropNode2
 tile_color 0x263066ff
 label "\[value output]"
 note_font "DejaVu Sans"
 note_font_size 24
 selected true
 xpos 1214
 ypos 1696
 border_width 15
 bdwidth 842
 bdheight 753
 addUserKnob {20 templateBackdrop l Template}
 addUserKnob {1 CLASSIFICATION +INVISIBLE}
 CLASSIFICATION Template
 addUserKnob {43 output l INVISIBLE +INVISIBLE}
 output "<center><font size=5>\[expr \{\[numvalue capital01] ? \[string tolower \[value passName]] : \[string toupper \[value passName]]\}]<font size=1><font color=#DDDDDD>\t\[expr \{\[numvalue capital02] ? \[string tolower \[value version]] : \[string toupper \[value version]]\}]\n\[expr \{\[numvalue capital03] ? \[string tolower \[value template]] : \[string toupper \[value template]]\}]</font></center>\n</font></center>\n\[knob tile_color \[expr \{\[value initialize] ? \[value presets] : \[knob tile_color]\}]]\n\n"
 addUserKnob {4 presets t "Context of the template and this will change the color of the backdrop to match operation" +INVISIBLE M {"555819519\tdefault" "808464639\tdefault 2" "2341178367\tdefault 3" "1360471295\t3D" "1197908479\taov" "3141102335\tchannel" "2057961471\tcolor" "522994687\tdeep" "3149642751\tdraw" "3429379327\tfilter" "11600127\tkeyer" "640706303\tmerge" "791630335\toptical" "2057961471\tother" "3722305023\tparticles" "679634175\tutility" "2963561983\ttime" "2776279807\ttransform" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" ""}}
 presets 640706303
 addUserKnob {6 initialize -STARTLINE +INVISIBLE}
 addUserKnob {3 padding l Padding t "This is the value of the scale distance between the nodes closest to the edge of the backdrop will be."}
 padding 100
 addUserKnob {22 snap l "snap to selected nodes" t "The backdrop will snap to the scale of the selected node and include a padding value." -STARTLINE T "this = nuke.thisNode()\nselNodes = nuke.selectedNodes()\npadding = this.knob('padding').value()\nif len(selNodes)== 0:\n\tpass\nelse:\n\tbdX = min(\[node.xpos() for node in selNodes]) - padding\n\tbdY = min(\[node.ypos() for node in selNodes]) - padding - 60\n\tbdW = max(\[node.xpos() + node.screenWidth() for node in selNodes]) + padding\n\tbdH = max(\[node.ypos() + node.screenHeight() for node in selNodes]) + padding\n\tthis.knob('xpos').setValue(bdX)\n\tthis.knob('ypos').setValue(bdY)\n\tthis.knob('bdwidth').setValue(bdW-bdX)\n\tthis.knob('bdheight').setValue(bdH-bdY)"}
 addUserKnob {26 ""}
 addUserKnob {1 passName l name t "Title of the template operation"}
 passName "OCIO<b>LOG</b> Merge"
 addUserKnob {4 capital01 l "" t "Will make the <b>name</b> message all capital letters, regardless how it's written." -STARTLINE M {upper lower "" "" "" "" "" ""}}
 addUserKnob {1 version t "version of template"}
 version v1.0
 addUserKnob {4 capital02 l "" t "Will make the <b>version</b> message all capital letters, regardless how it's written." -STARTLINE M {upper lower "" "" "" ""}}
 capital02 lower
 addUserKnob {1 template t "Default to be written \"template\" but can add additional notes here instead."}
 template template
 addUserKnob {4 capital03 l "" t "Will make the <b>template</b> message all capital letters, regardless how it's written." -STARTLINE M {upper lower "" "" "" ""}}
 addUserKnob {26 ""}
 addUserKnob {22 lock l lock/unlock T "nuke.thisNode()\['passName'].setEnabled( not nuke.thisNode()\['passName'].enabled() )\n\nnuke.thisNode()\['version'].setEnabled( not nuke.thisNode()\['version'].enabled() )\n\nnuke.thisNode()\['template'].setEnabled( not nuke.thisNode()\['template'].enabled() )\n" +STARTLINE}
 addUserKnob {22 export l "   export info   " -STARTLINE T "import nuke\n\nmessage = '''\n<center><b>INFO</center><i>\n• To change format adjust the format in the\n constant node of connect the UV map to\n another node you want format from.\n\n• AdjBBox is to add more uvmap pixel\n information if needed.\n<center>-</center>\n'''\n\n# Create the sticky note\nsticky_note = nuke.createNode('StickyNote')\nsticky_note\['label'].setValue(message)\n\n# Get the backdrop node (assuming thisNode() is the backdrop node)\nbackdrop_node = nuke.thisNode()\n\n# Get the position and size of the backdrop\nbd_x = backdrop_node\['xpos'].value()\nbd_y = backdrop_node\['ypos'].value()\n\n# Define the padding\npadding = 40\n\n# Calculate the position for the sticky note at the top left corner of the backdrop with padding\nsticky_x = bd_x + padding\nsticky_y = bd_y + padding\n\n# Set the position of the sticky note\nsticky_note\['xpos'].setValue(sticky_x)\nsticky_note\['ypos'].setValue(sticky_y)\n"}
 addUserKnob {20 info l Info}
 addUserKnob {26 Te l "" t "<br><font size='5'>Deep To Position</font><font color=#000060> v1.0</font>" +STARTLINE T "<br><font size='5'>Template Backdrop</font><font color=#747474> v1.0"}
 addUserKnob {26 ""}
 addUserKnob {26 bulletpoints l "" t "Overview of the node" +STARTLINE T "<br><strong>•</br> \n<b>Template Backdrop </b> backdrop setup for<br>template purposes\n</i>\n<br><br><b><a href=\"https://johntothvfx.com\" style=\"color:#747474;\">John Toth <b>© 2024 <br>"}
 addUserKnob {26 ""}
 addUserKnob {22 demo l "<a href=\"https://johntothvfx.com\"><span style=\"color:#747474\">Tool Demo</a>\n" t "Launches the web page where it will have more documentation or a video about the node." +INVISIBLE T "nuke.message(\"Coming Soon\")" +STARTLINE}
 addUserKnob {22 log l "<a href=\"https://johntothvfx.com\"><span style=\"color:#747474\">Version Log</a>\n" t "contains information about this node.\n\n- classification\n- context\n- date last modified\n- developer notes\n- version number\n- version log\n- year made\n\n\nThis only looks at the backdrop and not the template within." -STARTLINE T "\nversion_number = \"1.0.0\"\ncontext = \"Template\"\nmodified_date = \"13th August 2024\"\ndeveloper = \"John Toth © 2024\"\nsite = \"<a href='https://johntothvfx.com'><span style='color:#BBBBBB'>\"\nlog = \"\"\"\n<br></i><b> v 1.0 </b><i>\n-  backdrop template setup\n\"\"\"\nthank_you = \"\"\n\n# Retrieve node name\nname = nuke.thisNode()\['CLASSIFICATION'].getValue()\n\n# Message components\nheader = \"Version Log:\"\ndlm = \"<b>Date Last Modified: </b>\" + modified_date\nspace = \" \"\nenter = \"<br><br>\"\nupper = \"<b>\"\nlower = \"</b>\"\n\n# Formatted message\nmessage = (\n    f\"\{upper\}\{header\}\{enter\}\"\n    f\"Name: \{lower\}\{name\}<br>\"\n    f\"\{upper\}Version Number: \{lower\}\{version_number\}<br>\"\n    f\"\{upper\}Context: \{lower\}\{context\}\{enter\}\"\n    f\"\{dlm\}\{log\}<br>\"\n    #f\"<b>Thank You:</b><br>\{thank_you\}<br>\{enter\}\"\n    f\"\{upper\}\{site\}\{developer\}\{lower\}</span></a>\"\n)\n\n# Display the message\nnuke.message(message)"}
}
Dot {
 inputs 0
 name Dot1046
 label A
 note_font_size 35
 note_font_color 0xffffff
 selected true
 xpos 1314
 ypos 1866
}
Dot {
 name Dot1047
 note_font_size 35
 note_font_color 0xffffff
 selected true
 xpos 1314
 ypos 2044
}
Unpremult {
 name Unpremult1
 selected true
 xpos 1462
 ypos 2041
}
OCIOColorSpace {
 in_colorspace scene_linear
 out_colorspace compositing_log
 name OCIOColorSpace2
 selected true
 xpos 1462
 ypos 2065
}
Premult {
 name Premult1
 selected true
 xpos 1462
 ypos 2092
}
push $cut_paste_input
Dot {
 name Dot1049
 label B
 note_font_size 35
 note_font_color 0xffffff
 selected true
 xpos 1716
 ypos 1856
}
OCIOColorSpace {
 in_colorspace scene_linear
 out_colorspace compositing_log
 name OCIOColorSpace1
 selected true
 xpos 1682
 ypos 2007
}
Merge2 {
 inputs 2
 name Merge177
 label "mix: \[value mix] (\[value bbox])"
 selected true
 xpos 1682
 ypos 2088
}
OCIOColorSpace {
 in_colorspace compositing_log
 out_colorspace scene_linear
 name OCIOColorSpace3
 selected true
 xpos 1682
 ypos 2151
}
Dot {
 name Dot1050
 label OUTPUT
 note_font_size 35
 note_font_color 0xffffff
 selected true
 xpos 1716
 ypos 2288
}
StickyNote {
 inputs 0
 name StickyNote8
 tile_color 0x263066ff
 label "<center><b>Unpremult / Premult</center></b>\n<center><br>•</br> Log Merge </center>\n\n\n<br>•</br> Make sure that the whatever element that is premultiplied and contains an\nalpha channel gets unpremulted & premulted afterwards. This makes sure the \nColorspace is applied to every pixel correctly.\n\n\n<br>•</br> You may change the colorspace or the Colorspace node to your desire.\n\n\n\n\n<center>-"
 selected true
 xpos 1241
 ypos 2136
}
