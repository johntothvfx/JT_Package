Group {
 name IErode1
 help "Uses multiple erode (filter nodes) to erode the slected channels which is driven by the controller knob. This can help create a softer and nicer erode effect."
 tile_color 0xcc804eff
 selected true
 addUserKnob {20 IErode}
 addUserKnob {1 CLASSIFICATION +INVISIBLE}
 CLASSIFICATION IErode
 addUserKnob {41 channels t "The effect is only applied to these channels. \nIf you set this to something other than <b>all</b> or <b>none</b>, you can use the checkboxes on the right to select individual channels.\n\n" T FilterErode_0.channels}
 addUserKnob {41 matteController l controller t "Enables the associated controller channel to the right. Disabling this checkbox is the same as setting the channel to none. \n\nThe channel to use as the controller to evaluate how much the eroding the channels will receive.\nBy default, the effect is limited to the non-black areas of this channel. (Brighter the pixel the stronger the softeness)" T Copy1.from0}
 addUserKnob {26 space000 l "" +STARTLINE T " \t"}
 addUserKnob {14 size t "The size of the erode that is applied to the channels." R 0 100}
 addUserKnob {41 iteration l amount t "This value represents how many erode iterations are being generated to create softer transition between original image and the full effect.\n\n<b>This has a quality control added to it so it cannot go below or above a certain value. By default it's set to 0 - 100\n\n" T menu.iteration}
 addUserKnob {26 space002 l "" +STARTLINE T " \t"}
 addUserKnob {41 filter t "Select the filter algorithm to use: \n• box \n• triangle \n• quadratic \n• gaussian\n" T FilterErode_0.filter}
 addUserKnob {6 formatCrop l "crop to format" t "When enabled, the bounding box cannot grow past its incoming bounding/format size. This avoids creating oversized bounding boxes that can take longer to compute." -STARTLINE}
 formatCrop true
 addUserKnob {26 ""}
 addUserKnob {41 maskChannelMask l mask t "\nEnables the associated mask channel to the right. Disabling this checkbox is the same as setting the channel to none. \n\n\n\nThe channel to use as a mask. By default, the filter effect is limited to the non-black areas of this channel.\n" T Copy.maskChannelMask}
 addUserKnob {41 inject t "Copies the mask input to the predefined mask.a channel. Injecting the mask allows you to use the same mask further downstream." -STARTLINE T Copy.inject}
 addUserKnob {41 invert_mask l invert t "Inverts the use of the mask channel, so that the merge is limited to the non-white areas of the mask.\n" -STARTLINE T Copy.invert_mask}
 addUserKnob {41 fringe t "When enabled, only apply the effect to the edge of the mask. \nWhen disabled, the effect is applied to the entire mask." -STARTLINE T Copy.fringe}
 addUserKnob {7 mix t "Dissolves between the original image at 0 and the full effect at 1."}
 mix 1
 addUserKnob {20 info l Info}
 addUserKnob {26 version l "" +STARTLINE T "<br><font size='5'>IErode</font><font color=#CC804E> v1.0"}
 addUserKnob {26 ""}
 addUserKnob {26 bulletpoints l "" t "overview of the node" +STARTLINE T "<br><strong>•</br> \n<b>IErode</b> uses multiple erode (Filter) nodes <br> to erode the channel which is driven by the<br>controller input pixel value.\n</i>\n<br><br><b><a href=\"https://johntothvfx.com\" style=\"color:#CC804E;\">John Toth <b>© 2023 <br>"}
 addUserKnob {26 "" +STARTLINE}
 addUserKnob {22 demo l "<a href=\"https://johntothvfx.com\"><span style=\"color:#CC804E\">Tool Demo" t "Launches the web page where it will have more documentation or a video about the node." +INVISIBLE T "nuke.message('coming soon')" +STARTLINE}
 addUserKnob {22 log l "<a href=\"https://johntothvfx.com\"><span style=\"color:#CC804E\">Version Log</a>\n" t "contains information about this node.\n\n- classification\n- context\n- date last modified\n- developer notes\n- version number\n- version log\n- year made" -STARTLINE T "\nname = nuke.thisNode()\['CLASSIFICATION'].getValue()\nversion_number = \"1.1.2\"\ncontext = \"Filter\"\n\ndate = \"20th July\"\nyear = \" 2023\"\n\ndeveloper = \"John Toth © 2023\"\nsite = \"<a href='https://johntothvfx.com'> <span style='color:#BBBBBB'>\"\n\n\n\nlog = \"\"\"\n<br></i><b> v 1.0 </b><i>\n- uses multiple erode (filter) nodes to erode the image which is driven by the controller input pixel value.\n\"\"\"\n\n\n\nthankyou = \"\"\"Samantha Maiolo for helping with the dynamic knob coding.\n\"\"\"\n\n\n\"\"\"Do not touch section below\"\"\"\nheader = \"Version Log:\"\nDLM = \"<b>Date Last Modified: </b>\" + date + year\n\nSPACE = \" \"\nENTER = \"<br><br>\"\nUPPER = \"<b>\"\nLOWER = \"</b>\"\n\n\n\nnuke.message(UPPER + header + ENTER + \"Name: \" + LOWER + name + \"<br>\" + UPPER + \"Version Number: \" + LOWER + version_number + \"<br>\" + UPPER + \"Context: \" + LOWER + context + ENTER + DLM + log + \"</i>\" + \"<br>\" + \"<b>Thankyou:</b><br>\" + thankyou + \"<br>\" + UPPER + site + developer + ENTER + \"</a>\") \n\n"}
}
 BackdropNode {
  inputs 0
  name BackdropNode2
  tile_color 0x23232301
  label "<center>Don't Touch\n\n"
  note_font "Source Code Pro Light"
  note_font_size 40
  note_font_color 0xee453cff
  xpos -230
  ypos -1275
  bdwidth 488
  bdheight 206
 }
 Input {
  inputs 0
  name mask
  label "\[value number]"
  xpos -260
  ypos 152
  number 2
 }
 Input {
  inputs 0
  name controller
  label "\[value number]"
  xpos 290
  ypos -736
  number 1
 }
 AddChannels {
  channels rgba
  name AddChannels1
  xpos 290
  ypos -634
 }
 Input {
  inputs 0
  name Input
  label "\[value number]"
  xpos -409
  ypos -1480
 }
 Dot {
  name Dot3
  note_font_size 35
  note_font_color 0xffffff
  xpos -375
  ypos -1326
 }
set N121b1800 [stack 0]
 Dot {
  name Dot1
  note_font_size 35
  note_font_color 0xffffff
  xpos -375
  ypos -918
 }
set N12214200 [stack 0]
 Dot {
  name Dot6
  note_font_size 35
  note_font_color 0xffffff
  xpos -5
  ypos -918
 }
set N12214600 [stack 0]
 Dot {
  name Dot2
  note_font_size 35
  note_font_color 0xffffff
  xpos 544
  ypos -918
 }
set N12217200 [stack 0]
 Remove {
  name Remove1
  label "\[if \{ \[lsearch \"rgb rgba\"  \[value channels]] != -1 \} \{ return \"(\[value channels])\n\" \} else \{ return \"\"\}]\[if \{ \[value channels2] != \"none\"\} \{return \"(\[value channels2])\"\} else \{return \" \"\}]\[if \{ \[value channels3] != \"none\"\} \{return \"\n(\[value channels3])\"\} else \{return \" \"\}]\[if \{ \[value channels4] != \"none\"\} \{return \"\n(\[value channels4])\"\} else \{return \" \"\}]"
  xpos 510
  ypos -784
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy1
  xpos 510
  ypos -640
 }
 Shuffle {
  red alpha
  green alpha
  blue alpha
  name Shuffle1
  label "<b>\[value in]</b> &rarr; \[value out]"
  xpos 510
  ypos -500
 }
 NoOp {
  name Mask
  tile_color 0x3066ff
  xpos 510
  ypos -411
 }
set N12215200 [stack 0]
 Keyer {
  operation "luminance key"
  range {{4*menu.iterationSteps} {"4*menu.iterationSteps + menu.iterationSteps"} {"4*menu.iterationSteps + menu.iterationSteps*2"} {"4*menu.iterationSteps + menu.iterationSteps*2"}}
  name Keyer_5
  xpos 1600
  ypos -417
 }
push $N12217200
 NoOp {
  name Begin
  tile_color 0x3066ff
  xpos 710
  ypos -922
 }
set N12215e00 [stack 0]
 FilterErode {
  channels {{{parent.FilterErode_0.channels}}}
  size {{parent.size*menu.iterationSteps*(4+1)} {parent.size*menu.iterationSteps*(4+1)}}
  filter {{parent.FilterErode_0.filter}}
  name FilterErode_5
  xpos 1710
  ypos -722
 }
push $N12215200
 Keyer {
  operation "luminance key"
  range {{3*menu.iterationSteps} {"3*menu.iterationSteps + menu.iterationSteps"} {"3*menu.iterationSteps + menu.iterationSteps*2"} {"3*menu.iterationSteps + menu.iterationSteps*2"}}
  name Keyer_4
  xpos 1400
  ypos -417
 }
push $N12215e00
 FilterErode {
  channels {{{parent.FilterErode_0.channels}}}
  size {{parent.size*menu.iterationSteps*(3+1)} {parent.size*menu.iterationSteps*(3+1)}}
  filter {{parent.FilterErode_0.filter}}
  name FilterErode_4
  xpos 1510
  ypos -722
 }
push $N12215200
 Keyer {
  operation "luminance key"
  range {{2*menu.iterationSteps} {"2*menu.iterationSteps + menu.iterationSteps"} {"2*menu.iterationSteps + menu.iterationSteps*2"} {"2*menu.iterationSteps + menu.iterationSteps*2"}}
  name Keyer_3
  xpos 1200
  ypos -417
 }
push $N12215e00
 FilterErode {
  channels {{{parent.FilterErode_0.channels}}}
  size {{parent.size*menu.iterationSteps*(2+1)} {parent.size*menu.iterationSteps*(2+1)}}
  filter {{parent.FilterErode_0.filter}}
  name FilterErode_3
  xpos 1310
  ypos -722
 }
push $N12215200
 Keyer {
  operation "luminance key"
  range {{1*menu.iterationSteps} {"1*menu.iterationSteps + menu.iterationSteps"} {"1*menu.iterationSteps + menu.iterationSteps*2"} {"1*menu.iterationSteps + menu.iterationSteps*2"}}
  name Keyer_2
  xpos 1000
  ypos -417
 }
push $N12215e00
 FilterErode {
  channels {{{parent.FilterErode_0.channels}}}
  size {{parent.size*menu.iterationSteps*(1+1)} {parent.size*menu.iterationSteps*(1+1)}}
  filter {{parent.FilterErode_0.filter}}
  name FilterErode_2
  xpos 1110
  ypos -722
 }
push $N12215200
 Keyer {
  operation "luminance key"
  range {{0*menu.iterationSteps} {"0*menu.iterationSteps + menu.iterationSteps"} {"0*menu.iterationSteps + menu.iterationSteps*2"} {"0*menu.iterationSteps + menu.iterationSteps*2"}}
  name Keyer_1
  xpos 800
  ypos -417
 }
push $N12215e00
 FilterErode {
  channels {{{parent.FilterErode_0.channels}}}
  size {{parent.size*menu.iterationSteps*(0+1)} {parent.size*menu.iterationSteps*(0+1)}}
  filter {{parent.FilterErode_0.filter}}
  name FilterErode_1
  xpos 910
  ypos -722
 }
push $N12215e00
 Keymix {
  inputs 3
  channels {{{parent.Blur.channels}}}
  bbox A
  name Keymix_1
  xpos 910
  ypos -222
 }
 Keymix {
  inputs 3
  channels {{{parent.Blur.channels}}}
  bbox A
  name Keymix_2
  xpos 1110
  ypos -222
 }
 Keymix {
  inputs 3
  channels {{{parent.Blur.channels}}}
  bbox A
  name Keymix_3
  xpos 1310
  ypos -222
 }
 Keymix {
  inputs 3
  channels {{{parent.Blur.channels}}}
  bbox A
  name Keymix_4
  xpos 1510
  ypos -222
 }
 Keymix {
  inputs 3
  channels {{{parent.Blur.channels}}}
  bbox A
  name Keymix_5
  xpos 1710
  ypos -222
 }
 NoOp {
  name End
  tile_color 0x3066ff
  xpos 710
  ypos 158
 }
push $N12214600
 Merge2 {
  inputs 2+1
  operation copy
  Achannels {{{parent.FilterErode_0.channels}}}
  Bchannels {{{parent.FilterErode_0.channels}}}
  output {{{parent.FilterErode_0.channels}}}
  also_merge {{{parent.FilterErode_0.channels}}}
  name Copy
  label "mix: \[value mix] (\[value bbox])"
  xpos -40
  ypos 146
 }
 Crop {
  box {{min(SC_bbx.x,x)} {min(SC_bbx.y,y)} {max(SC_bbx.r,width)} {max(SC_bbx.t,height)}}
  intersect true
  crop false
  name MIN_CROP
  xpos -40
  ypos 350
  disable {{!parent.formatCrop}}
  addUserKnob {20 helptab l "Connection Tab"}
  addUserKnob {1 SC_input l "Safety Input Crop"}
  SC_input Input
  addUserKnob {22 findParent l find -STARTLINE T "SC_inputNode = nuke.toNode(nuke.thisNode().knob(\"SC_input\").value())\nnuke.zoom( 2, \[SC_inputNode.xpos(), SC_inputNode.ypos()])"}
  addUserKnob {15 SC_bbx l bbox +HIDDEN}
  SC_bbx {{"\[value SC_input].bbox.x"} {"\[value SC_input].bbox.y"} {"\[value SC_input].bbox.r"} {"\[value SC_input].bbox.t"}}
 }
 Expression {
  expr0 isnan(r)?0:r
  expr1 isnan(g)?0:g
  expr2 isnan(b)?0:b
  expr3 isnan(a)?0:a
  name NAN
  label Safety
  xpos -40
  ypos 488
 }
push $N12214200
 Dissolve {
  inputs 2
  which {{parent.mix}}
  name Mix
  xpos -409
  ypos 488
 }
 Clamp {
  channels alpha
  name Clamp1
  xpos -409
  ypos 632
 }
 Output {
  name Output1
  xpos -409
  ypos 758
 }
push $N121b1800
 Dot {
  name Dot4
  note_font_size 35
  note_font_color 0xffffff
  xpos -116
  ypos -1326
 }
 FilterErode {
  size {{parent.size} {parent.size}}
  name FilterErode_0
  xpos -150
  ypos -1168
 }
 NoOp {
  inputs 0
  name menu
  onCreate "nuke.thisNode()\['iteration'].setFlag(0x0000000000000002)"
  knobChanged "grp = nuke.thisGroup()\nk = nuke.thisKnob()\n\n\n\nqualityLow = nuke.thisNode().knob('qualityLowEnd').getValue()\nqualityHigh = nuke.thisNode().knob('qualityHighEnd').getValue()\nqualityValue = int(nuke.thisNode().knob('iteration').getValue())\n\n\n     \nif k.name() == 'iteration' :\n    if qualityValue < qualityLow:\n        qualityValue = qualityLow\n    elif qualityValue > qualityHigh:\n          qualityValue = qualityHigh\n    grp\['iteration'].setValue(qualityValue)\n    \n\n      \n    iteration = int(grp\['iteration'].value())\n    \n    grp.begin()\n    begin = nuke.toNode('Begin')\n    end = nuke.toNode('End')\n    mask = nuke.toNode('Mask')\n    Erode0 = nuke.toNode('Begin')\n    addChannel = nuke.toNode('AddChannels1')\n    Xpos = Erode0.xpos()\n    Ypos = Erode0.ypos()\n    \n    for n in nuke.allNodes('FilterErode'):\n        if n.name() not in \['FilterErode_0']:\n            nuke.delete(n)\n            \n    for n in nuke.allNodes('Keymix'):\n        if n.name() not in \['Keymix_0']:\n            nuke.delete(n)\n            \n    for n in nuke.allNodes('Keyer'):\n        if n.name() not in \['Keyer_0']:\n            nuke.delete(n)\n            \n            \n          \n          \n\n  \n            \n    \n    new=\[]    \n    \n    for n in range(0,iteration):\n\n        erode=nuke.nodes.FilterErode(xpos = Xpos+(n+1)*200,ypos= Ypos+200)\n        erode.setName('FilterErode_'+str(n+1))\n        erode\['channels'].setExpression('parent.FilterErode_0.channels')\n        erode\['size'].setValue(\[0,0])\n        erode\['size'].setExpression(\"parent.size*menu.iterationSteps*(\" + str(n) + \"+1)\")\n        erode\['filter'].setExpression('parent.FilterErode_0.filter')\n        erode.setInput(0,begin)\n   \n  \n        \n        \n        keyer=nuke.nodes.Keyer(xpos = Xpos+(n+1)*200-110,ypos= Ypos+505)\n        keyer.setName('Keyer_'+str(n+1))\n        keyer\['operation'].setValue('luminance')\n        keyer\['range'].setExpression(str(n)+\"*menu.iterationSteps\", 0)\n        keyer\['range'].setExpression(str(n)+\"*menu.iterationSteps + menu.iterationSteps\", 1)\n        keyer\['range'].setExpression(str(n)+\"*menu.iterationSteps + menu.iterationSteps*2\", 2)\n        keyer\['range'].setExpression(str(n)+\"*menu.iterationSteps + menu.iterationSteps*2\",3)\n        keyer.setInput(0,mask)\n \n \n \n        Keymix = nuke.nodes.Keymix(xpos = Xpos+(n+1)*200,ypos= Ypos+700)\n        Keymix.setName('Keymix_'+str(n+1))\n        Keymix\['channels'].setExpression('parent.Blur.channels')\n        Keymix\['bbox'].setValue('A')\n        new.append(Keymix)\n        Keymix.setInput(1,erode)\n        Keymix.setInput(2,keyer)\n        if n != 0:\n            Keymix.setInput(0, new\[n-1])\n        else:\n            Keymix.setInput(0, Erode0)\n            Keymix.setInput(2, keyer)\n\n\n    end.setInput(0,Keymix)\n    \n\n    \n\n"
  xpos 70
  ypos -1162
  hide_input true
  addUserKnob {20 User}
  addUserKnob {7 iteration R 1 10}
  iteration 5
  addUserKnob {7 iterationSteps l steps}
  iterationSteps {{1/iteration}}
  addUserKnob {26 qualityControl l "<b>Quality Control</b>"}
  addUserKnob {3 qualityLowEnd l quality t qualityLowEnd}
  qualityLowEnd 1
  addUserKnob {3 qualityHighEnd l "" -STARTLINE}
  qualityHighEnd 100
 }
end_group
