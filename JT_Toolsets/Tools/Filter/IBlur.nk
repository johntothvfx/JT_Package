Group {
 name IBlur1
 help "Uses the controller to evaluate how much the softening the image will recieve.\n\nThis will slice the controller input channel into slices based on the amount value. \n\nEach slice will be softened based on the size value."
 tile_color 0xcc804eff
 selected true
 addUserKnob {20 IBlur}
 addUserKnob {1 CLASSIFICATION +INVISIBLE}
 CLASSIFICATION IBlur
 addUserKnob {41 channels t "The iblur effect is only applied to these channels. \nIf you set this to something other than all or none, you can use the checkboxes on the right to select individual channels." T Blur_0.channels}
 addUserKnob {41 controller t "Enables the associated controller channel to the right. Disabling this checkbox is the same as setting the channel to none. \n\nThe channel to use as the controller to evaluate how much the softening the image will receive.\nBy default, the effect is limited to the non-black areas of this channel. (Brighter the pixel the stronger the softeness)" T Copy1.from0}
 addUserKnob {26 space000 l "" +STARTLINE T " \t"}
 addUserKnob {41 type t "what node do you want to soften the image:\n\n• Blur\n• Defocus" T menu.type}
 addUserKnob {14 size t "Scale of the soften you want to apply to the image driven by the controller input." R 0 100}
 addUserKnob {41 iteration l amount t "This value represents how many Blur iterations are being generated to create softer transition between original image and the full effect.\n\n<b>This has a quality control added to it so it cannot go below or above a certain value. By default it's set to 0 - 100\n\n" T menu.iteration}
 addUserKnob {26 space002 l "" +STARTLINE +INVISIBLE T " \t"}
 addUserKnob {4 filter t "Select the filter algorithm to use: \n• box \n• triangle \n• quadratic \n• gaussian" M {"box " "triangle " "quadratic " gaussian "" "" "" "" ""}}
 filter gaussian
 addUserKnob {4 method t "Defocus offers two modes of operation. Accelerated mode is faster then full precision mode, specially for big disk sizes, however it may generate speckles in horizontal lines due to imprecision in the computer math.Normally those speckles are invisible to the eye (delta < 0.00001), but they can cause artefacts in nodes that use comparison math ( i.e if (src.red==0)...). In those rare cases, change the method to 'Full Precision' will deliver a perfect resultz at the cost of performance." +HIDDEN M {accelerated "full precision" "" "" "" "" "" ""}}
 addUserKnob {41 quality T Blur_0.quality}
 addUserKnob {6 crop l "crop to format" -STARTLINE}
 crop true
 addUserKnob {26 ""}
 addUserKnob {41 mask t "Enables the associated mask channel to the right. Disabling this checkbox is the same as setting the channel to none. \n\n\n\nThe channel to use as a mask. By default, the filter effect is limited to the non-black areas of this channel." T Copy1.maskChannelMask}
 addUserKnob {6 inject t "Copies the mask input to the predefined mask.a channel. Injecting the mask allows you to use the same mask further downstream." -STARTLINE}
 addUserKnob {6 invert_mask l invert t "Inverts the use of the mask channel, so that the merge is limited to the non-white areas of the mask.\n" -STARTLINE}
 addUserKnob {6 fringe t "When enabled, only apply the effect to the edge of the mask. \nWhen disabled, the effect is applied to the entire mask." -STARTLINE}
 addUserKnob {7 mix t "Dissolves between the original image at 0 and the full effect at 1."}
 mix 1
 addUserKnob {20 info l Info}
 addUserKnob {26 version l "" +STARTLINE T "<br><font size='5'>IBlur</font><font color=#CC804E> v1.0"}
 addUserKnob {26 ""}
 addUserKnob {26 bulletpoints l "" t "overview of the node" +STARTLINE T "<br><strong>•</br> \n<b>IBlur</b>  uses multiple Blur / Defocus nodes <br> to soften the image which is driven by the<br>controller input pixel value.\n</i>\n<br><br><b><a href=\"https://johntothvfx.com\" style=\"color:#CC804E;\">John Toth <b>© 2023 <br>"}
 addUserKnob {26 ""}
 addUserKnob {22 demo l "<a href=\"https://johntothvfx.com\"><span style=\"color:#CC804E\">Tool Demo" t "Launches the web page where it will have more documentation or a video about the node." +INVISIBLE T "nuke.message('coming soon')" +STARTLINE}
 addUserKnob {22 log l "<a href=\"https://johntothvfx.com\"><span style=\"color:#CC804E\">Version Log</a>\n" t "contains information about this node.\n\n- classification\n- context\n- date last modified\n- developer notes\n- version number\n- version log\n- year made" -STARTLINE T "\nname = nuke.thisNode()\['CLASSIFICATION'].getValue()\nversion_number = \"1.1.4\"\ncontext = \"Filter\"\n\ndate = \"19th December\"\nyear = \" 2024\"\n\ndeveloper = \"John Toth © 2023\"\nsite = \"<a href='https://johntothvfx.com'> <span style='color:#BBBBBB'>\"\n\n\n\nlog = \"\"\"\n<br></i><b> v 1.0 </b><i>\n- uses multiple Blur / Defocus nodes to soften the image which is driven by the controller input pixel value.\n\"\"\"\n\n\n\nthankyou = \"\"\"Samantha Maiolo for helping with the dynamic knob coding.\n\"\"\"\n\n\n\"\"\"Do not touch section below\"\"\"\nheader = \"Version Log:\"\nDLM = \"<b>Date Last Modified: </b>\" + date + year\n\nSPACE = \" \"\nENTER = \"<br><br>\"\nUPPER = \"<b>\"\nLOWER = \"</b>\"\n\n\n\nnuke.message(UPPER + header + ENTER + \"Name: \" + LOWER + name + \"<br>\" + UPPER + \"Version Number: \" + LOWER + version_number + \"<br>\" + UPPER + \"Context: \" + LOWER + context + ENTER + DLM + log + \"</i>\" + \"<br>\" + \"<b>Thankyou:</b><br>\" + thankyou + \"<br>\" + UPPER + site + developer + ENTER + \"</a>\") \n\n"}
}
 BackdropNode {
  inputs 0
  name BackdropNode2
  tile_color 0x23232301
  label "<center>Don't Touch\n\n"
  note_font "Source Code Pro Light"
  note_font_size 40
  note_font_color 0xee453cff
  xpos -240
  ypos -1720
  bdwidth 471
  bdheight 298
 }
 Input {
  inputs 0
  name mask
  label "\[value number]"
  xpos 180
  ypos -1038
  number 2
 }
 Dot {
  name Dot5
  note_font_size 35
  note_font_color 0xffffff
  xpos 214
  ypos -918
 }
 Input {
  inputs 0
  name controller
  label "\[value number]"
  xpos -260
  ypos -1038
  number 1
 }
 AddChannels {
  channels rgba
  name AddChannels1
  xpos -260
  ypos -922
 }
 Input {
  inputs 0
  name Input
  label "\[value number]"
  xpos -409
  ypos -1768
 }
 Dot {
  name Dot3
  note_font_size 35
  note_font_color 0xffffff
  xpos -375
  ypos -1614
 }
set N527f3200 [stack 0]
 Dot {
  name Dot1
  note_font_size 35
  note_font_color 0xffffff
  xpos -375
  ypos -1206
 }
set N527f3600 [stack 0]
 Dot {
  name Dot2
  note_font_size 35
  note_font_color 0xffffff
  xpos -6
  ypos -1206
 }
set N527f3a00 [stack 0]
 Remove {
  name Remove1
  label "\[if \{ \[lsearch \"rgb rgba\"  \[value channels]] != -1 \} \{ return \"(\[value channels])\n\" \} else \{ return \"\"\}]\[if \{ \[value channels2] != \"none\"\} \{return \"(\[value channels2])\"\} else \{return \" \"\}]\[if \{ \[value channels3] != \"none\"\} \{return \"\n(\[value channels3])\"\} else \{return \" \"\}]\[if \{ \[value channels4] != \"none\"\} \{return \"\n(\[value channels4])\"\} else \{return \" \"\}]"
  xpos -40
  ypos -1168
 }
 Copy {
  inputs 2+1
  from0 rgba.alpha
  to0 rgba.alpha
  inject {{parent.inject}}
  invert_mask {{parent.invert_mask}}
  fringe {{parent.fringe}}
  name Copy1
  xpos -40
  ypos -928
 }
 Shuffle {
  red alpha
  green alpha
  blue alpha
  name Shuffle1
  tile_color 0xbbbbbbff
  label "<b>\[value in]</b> &rarr; \[value out]"
  xpos -40
  ypos -788
 }
 NoOp {
  name Mask
  tile_color 0x3066ff
  xpos -40
  ypos -699
 }
set N527f7c00 [stack 0]
 Keyer {
  operation "luminance key"
  range {{4*menu.iterationSteps} {"4*menu.iterationSteps + menu.iterationSteps"} {"4*menu.iterationSteps + menu.iterationSteps*2"} {"4*menu.iterationSteps + menu.iterationSteps*2"}}
  name Keyer_5
  xpos 1180
  ypos -705
 }
push $N527f3a00
 NoOp {
  name Begin
  tile_color 0x3066ff
  xpos 290
  ypos -1210
 }
set N527f8800 [stack 0]
 Blur {
  channels {{{parent.Blur.channels}}}
  size {{parent.size*menu.iterationSteps*(4+1)} {parent.size*menu.iterationSteps*(4+1)}}
  filter {{parent.filter}}
  quality {{parent.Blur_0.quality}}
  crop {{parent.crop}}
  name Blur_5
  xpos 1290
  ypos -1010
 }
push $N527f7c00
 Keyer {
  operation "luminance key"
  range {{3*menu.iterationSteps} {"3*menu.iterationSteps + menu.iterationSteps"} {"3*menu.iterationSteps + menu.iterationSteps*2"} {"3*menu.iterationSteps + menu.iterationSteps*2"}}
  name Keyer_4
  xpos 980
  ypos -705
 }
push $N527f8800
 Blur {
  channels {{{parent.Blur.channels}}}
  size {{parent.size*menu.iterationSteps*(3+1)} {parent.size*menu.iterationSteps*(3+1)}}
  filter {{parent.filter}}
  quality {{parent.Blur_0.quality}}
  crop {{parent.crop}}
  name Blur_4
  xpos 1090
  ypos -1010
 }
push $N527f7c00
 Keyer {
  operation "luminance key"
  range {{2*menu.iterationSteps} {"2*menu.iterationSteps + menu.iterationSteps"} {"2*menu.iterationSteps + menu.iterationSteps*2"} {"2*menu.iterationSteps + menu.iterationSteps*2"}}
  name Keyer_3
  xpos 780
  ypos -705
 }
push $N527f8800
 Blur {
  channels {{{parent.Blur.channels}}}
  size {{parent.size*menu.iterationSteps*(2+1)} {parent.size*menu.iterationSteps*(2+1)}}
  filter {{parent.filter}}
  quality {{parent.Blur_0.quality}}
  crop {{parent.crop}}
  name Blur_3
  xpos 890
  ypos -1010
 }
push $N527f7c00
 Keyer {
  operation "luminance key"
  range {{1*menu.iterationSteps} {"1*menu.iterationSteps + menu.iterationSteps"} {"1*menu.iterationSteps + menu.iterationSteps*2"} {"1*menu.iterationSteps + menu.iterationSteps*2"}}
  name Keyer_2
  xpos 580
  ypos -705
 }
push $N527f8800
 Blur {
  channels {{{parent.Blur.channels}}}
  size {{parent.size*menu.iterationSteps*(1+1)} {parent.size*menu.iterationSteps*(1+1)}}
  filter {{parent.filter}}
  quality {{parent.Blur_0.quality}}
  crop {{parent.crop}}
  name Blur_2
  xpos 690
  ypos -1010
 }
push $N527f7c00
 Keyer {
  operation "luminance key"
  range {{0*menu.iterationSteps} {"0*menu.iterationSteps + menu.iterationSteps"} {"0*menu.iterationSteps + menu.iterationSteps*2"} {"0*menu.iterationSteps + menu.iterationSteps*2"}}
  name Keyer_1
  xpos 380
  ypos -705
 }
push $N527f8800
 Blur {
  channels {{{parent.Blur.channels}}}
  size {{parent.size*menu.iterationSteps*(0+1)} {parent.size*menu.iterationSteps*(0+1)}}
  filter {{parent.filter}}
  quality {{parent.Blur_0.quality}}
  crop {{parent.crop}}
  name Blur_1
  xpos 490
  ypos -1010
 }
push $N527f8800
 Keymix {
  inputs 3
  channels {{{parent.Blur.channels}}}
  bbox A
  name Keymix_1
  xpos 490
  ypos -510
 }
 Keymix {
  inputs 3
  channels {{{parent.Blur.channels}}}
  bbox A
  name Keymix_2
  xpos 690
  ypos -510
 }
 Keymix {
  inputs 3
  channels {{{parent.Blur.channels}}}
  bbox A
  name Keymix_3
  xpos 890
  ypos -510
 }
 Keymix {
  inputs 3
  channels {{{parent.Blur.channels}}}
  bbox A
  name Keymix_4
  xpos 1090
  ypos -510
 }
 Keymix {
  inputs 3
  channels {{{parent.Blur.channels}}}
  bbox A
  name Keymix_5
  xpos 1290
  ypos -510
 }
 NoOp {
  name End
  tile_color 0x3066ff
  xpos -39
  ypos -82
 }
 Crop {
  box {{"min(0, Input.bbox.x)"} {"min(0, Input.bbox.y)"} {"max(width, Input.bbox.r)"} {"max(height, Input.bbox.t)"}}
  intersect true
  name Crop1
  label "Safety Crop"
  xpos -39
  ypos 8
  disable {{!parent.crop}}
 }
 Dot {
  name Dot7
  note_font_size 35
  note_font_color 0xffffff
  xpos -5
  ypos 162
 }
push $N527f3600
 Dissolve {
  inputs 2
  which {{parent.mix}}
  name Mix
  xpos -409
  ypos 152
 }
 Output {
  name Output1
  xpos -409
  ypos 422
 }
push $N527f3200
 Dot {
  name Dot4
  note_font_size 35
  note_font_color 0xffffff
  xpos -116
  ypos -1614
 }
 Blur {
  size {{parent.size}}
  crop false
  name Blur_0
  xpos -150
  ypos -1528
 }
 NoOp {
  inputs 0
  name menu
  onCreate "nuke.thisNode()\['iteration'].setFlag(0x0000000000000002)"
  knobChanged "grp = nuke.thisGroup()\nk = nuke.thisKnob()\n\n\n\n#list of knobs to hide\nfilter = \['filter']\nmethod = \['method']\n\nif k.name() in ('type', 'showPanel'):\n    CONTROLS_type = grp\['type'].value()\n    if CONTROLS_type == 'Blur':\n        for i in filter:\n            grp\[i].setVisible(True)\n        for i in method:\n            grp\[i].setVisible(False)\n            \n    elif CONTROLS_type == 'Defocus':\n        for i in filter:\n            grp\[i].setVisible(False)\n        for i in method:\n            grp\[i].setVisible(True)\n\n\n\n#Quality control making slider only int values\nqualityLow = nuke.thisNode().knob('qualityLowEnd').getValue()\nqualityHigh = nuke.thisNode().knob('qualityHighEnd').getValue()\nqualityValue = int(nuke.thisNode().knob('iteration').getValue())\n\ntype = int(nuke.thisNode().knob('type').getValue())\n\n\n\n     \nif k.name() == 'iteration' or k.name() == 'type' :\n    if qualityValue < qualityLow:\n        qualityValue = qualityLow\n    elif qualityValue > qualityHigh:\n          qualityValue = qualityHigh\n    grp\['iteration'].setValue(qualityValue)\n    \n\n      \n    iteration = int(grp\['iteration'].value())\n    \n    grp.begin()\n    begin = nuke.toNode('Begin')\n    end = nuke.toNode('End')\n    mask = nuke.toNode('Mask')\n    blur0 = nuke.toNode('Begin')\n    addChannel = nuke.toNode('AddChannels1')\n    Xpos = blur0.xpos()\n    Ypos = blur0.ypos()\n\n\n\n    \n    for n in nuke.allNodes('Blur'):\n        if n.name() not in \['Blur_0']:\n            nuke.delete(n)\n            \n    for n in nuke.allNodes('Defocus'):\n        if n.name() not in \['']:\n            nuke.delete(n)\n            \n    for n in nuke.allNodes('Keymix'):\n        if n.name() not in \['Keymix_0']:\n            nuke.delete(n)\n            \n    for n in nuke.allNodes('Keyer'):\n        if n.name() not in \['Keyer_0']:\n            nuke.delete(n)\n            \n            \n          \n          \n\n  \n            \n    \n    new=\[]    \n    \n    for n in range(0,iteration):\n        \n\n\n        if type == 0:\n            blur=nuke.nodes.Blur(xpos = Xpos+(n+1)*200,ypos= Ypos+200)\n            blur.setName('Blur_'+str(n+1))\n            blur\['channels'].setExpression('parent.Blur.channels')\n            blur\['size'].setValue(\[0,0])\n            blur\['size'].setExpression(\"parent.size*menu.iterationSteps*(\" + str(n) + \"+1)\")\n            blur\['crop'].setExpression('parent.crop')\n            blur\['quality'].setExpression('parent.Blur_0.quality')\n            blur\['filter'].setExpression('parent.filter')\n            blur.setInput(0,begin)\n        else:\n            defocus=nuke.nodes.Defocus(xpos = Xpos+(n+1)*200,ypos= Ypos+200)\n            defocus.setName('Defocus_'+str(n+1))\n            defocus\['channels'].setExpression('parent.Blur.channels')\n            defocus\['defocus'].setValue(\[0])\n            defocus\['defocus'].setExpression(\"parent.menu.iterationSteps\")\n            defocus\['scale'].setExpression(\"(parent.size*menu.iterationSteps*(\" + str(n) + \"+1) * 4)\")\n            defocus\['method'].setExpression(\"parent.menu.method\")\n            defocus\['quality'].setExpression('parent.Blur_0.quality')\n            defocus.setInput(0,begin)         \n   \n  \n        \n        \n        keyer=nuke.nodes.Keyer(xpos = Xpos+(n+1)*200-110,ypos= Ypos+505)\n        keyer.setName('Keyer_'+str(n+1))\n        keyer\['operation'].setValue('luminance')\n        keyer\['range'].setExpression(str(n)+\"*menu.iterationSteps\", 0)\n        keyer\['range'].setExpression(str(n)+\"*menu.iterationSteps + menu.iterationSteps\", 1)\n        keyer\['range'].setExpression(str(n)+\"*menu.iterationSteps + menu.iterationSteps*2\", 2)\n        keyer\['range'].setExpression(str(n)+\"*menu.iterationSteps + menu.iterationSteps*2\",3)\n        keyer.setInput(0,mask)\n \n \n \n        Keymix = nuke.nodes.Keymix(xpos = Xpos+(n+1)*200,ypos= Ypos+700)\n        Keymix.setName('Keymix_'+str(n+1))\n        Keymix\['channels'].setExpression('parent.Blur.channels')\n        Keymix\['bbox'].setValue('A')\n        new.append(Keymix)\n        \n        if type == 0:       \n             Keymix.setInput(1,blur)\n        else:\n            Keymix.setInput(1,defocus) \n                   \n        Keymix.setInput(2,keyer)\n        if n != 0:\n            Keymix.setInput(0, new\[n-1])\n        else:\n            Keymix.setInput(0, blur0)\n       \n            \n            Keymix.setInput(2, keyer)\n\n\n    end.setInput(0,Keymix)\n    \n\n    \n\n"
  xpos 70
  ypos -1522
  hide_input true
  addUserKnob {20 User}
  addUserKnob {4 type M {Blur Defocus ""}}
  addUserKnob {7 iteration R 1 10}
  iteration 5
  addUserKnob {7 iterationSteps l steps}
  iterationSteps {{1/iteration}}
  addUserKnob {26 qualityControl l "<b>Quality Control</b>"}
  addUserKnob {3 qualityLowEnd l quality t qualityLowEnd}
  qualityLowEnd 1
  addUserKnob {3 qualityHighEnd l "" -STARTLINE}
  qualityHighEnd 100
 }
end_group
