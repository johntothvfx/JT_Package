Group {
 name TimeCode1
 help "Adds a visual timecode overlay\n\nFormatting: HH:MM:SS:FF\n- HH: Hours (00-23)\n- MM: Minutes (00-59)\n- SS: Seconds (00-59)\n- FF: Frames (Active viewers timeline frame)\n"
 knobChanged "n = nuke.thisNode()\nk = nuke.thisKnob()\n\nif k.name() == 'inputChange':\n    if n.input(0) is not None:\n        input_class = n.input(0).Class()\n        if input_class.startswith(( 'Deep', 'Particle', 'Axis', 'Camera', 'Light', 'Scene', 'Environment', 'Cube', 'Cylinder', 'ModelBuilder', 'PointCloudGenerator', 'PoissonMesh', 'MergeGeo', 'CrosstalkGeo', 'DisplaceGeo', 'EditGeo', 'LogGeo', 'Normals', 'ProcGeo', 'RadialDistort', 'Trilinear', 'UVProject', 'ModifyRIB', 'ApplyMaterial', 'Geo')):\n            n.setInput(0, None)"
 tile_color 0xb0a45dff
 selected true
 addUserKnob {20 timeCode l TimeCode}
 addUserKnob {1 CLASSIFICATION +INVISIBLE}
 CLASSIFICATION TimeCode
 addUserKnob {3 startFrame l "start frame" t "Timecode will start on the set current frame."}
 startFrame 1001
 addUserKnob {22 set_current_frame l "set to current frame" t "Set the start frame to the current frame of the active viewer timeline." -STARTLINE T "nuke.thisNode()\[\"startFrame\"].setValue(nuke.frame())"}
 addUserKnob {26 ""}
 addUserKnob {3 hours t "Offsets the timecode hourly"}
 addUserKnob {3 minutes t "Offsets the timecode in minutes"}
 addUserKnob {3 seconds t "Offsets the timecode in seconds"}
 addUserKnob {3 frameOffset l frame t "Offsets the frame number" +DISABLED}
 addUserKnob {41 displayFrame l "add frame" t "When Enabled this will add the current frame the active viewer in the timeline to the end of the timecode." -STARTLINE T Warning.displayFrame}
 addUserKnob {26 ""}
 addUserKnob {41 addMetaData l "add timecode to metadata" t "When Enabled, ths timecode will also be added to the metadata." T Warning.addMetaData}
 addUserKnob {1 prefix t "When \"add timecode to metdata\" is enabled this will be the prefix that will added to the metadata to represent this nodes timecode." +DISABLED}
 prefix input/timecode
 addUserKnob {20 visualize l Visualize}
 addUserKnob {2 font t "Sets the font style to use for the text. "}
 font "\[python nuke.defaultFontPathname()]"
 addUserKnob {4 xjustify l justify t "Sets how to align the text vertically: \n\n<b>• left</b> - align the text against the left edge of the margin.\n\n<b>• center</b> - align the text from the center of the margin.\n\n<b>• right</b> - align the text against the right edge of the margin." M {Left Center Right "" "" "" "" "" "" ""}}
 xjustify Right
 addUserKnob {4 yjustify l "" t "Sets how to align the text Horizontally: \n\n<b>• top</b> - align the text against the top edge of the margin.\n\n<b>• center</b> - align the text from the center of the margin.\n\n<b>• bottom</b> - align the text against the bottom edge of the margin." -STARTLINE M {Top Center Bottom "" "" "" "" "" "" ""}}
 yjustify Bottom
 addUserKnob {4 safeZone l "safe zone" t "Overlay safe zones guidelines based on the image input.\n\n<b>• title safe</b> - any text intended for the audience should reside within this zone.\n\n<b>• action safe</b> - any visual elements intended for the audience should reside within this zone." M {"title safe" "action safe" "" "" "" "" "" "" "" "" ""}}
 safeZone "action safe"
 addUserKnob {3 margin t "The margin represents the padding from the edge of frame.\n\nThe higher the value more the paddiing will shrink in size." +DISABLED}
 margin 100
 addUserKnob {41 autoMargin l "auto margin" t "When this is enabled, the manual margin knob will be disabled.\n\nThis will automatically calculated the margin to the safe zone, based on the input image root format." -STARTLINE T Warning.autoMargin}
 addUserKnob {3 fontSize l size t "Multiply the font size for all characters by this value." +DISABLED}
 fontSize 100
 addUserKnob {41 autoFontSize l "auto size" t "When this is enabled, the manual font size knob will be disabled.\n\nThis will calculate the font size based on the input with/height." -STARTLINE T Warning.autoFontSize}
 addUserKnob {3 border t "Creates a black border around the text." +DISABLED}
 border 5
 addUserKnob {41 autoBorder l "auto border" t "When this is enabled, the manual border knob will be disabled.\n\nThis will calculate the font size based on the input with/height." -STARTLINE T Warning.autoBorder}
 addUserKnob {18 color}
 color {1 1 0}
 addUserKnob {6 color_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {6 color_rgb_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {7 labelMix l mix t "Dissolves between the original image at 0 and the full effect at 1.\n\n<b>Note:</b>\nThis is only for the text"}
 labelMix 1
 addUserKnob {20 info l Info}
 addUserKnob {26 version l "" +STARTLINE T "<br><font size='5'>TimeCode</font><font color=#B0A45D> v1.0"}
 addUserKnob {26 ""}
 addUserKnob {26 bulletpoints l "" +STARTLINE T "<br><strong>•</br><b> TimeCode</b> will be displayed ontop of<br>the image.\n\n<br><br><b><a href=\"https://johntothvfx.com\" style=\"color:#B0A45D;\">John Toth <b>© 2023 <br>"}
 addUserKnob {26 ""}
 addUserKnob {22 demo l "<a href=\"https://johntothvfx.com\"><span style=\"color:#B0A45D\">Tool Demo</a>\n" t "Launches the web page where it will have more documentation or a video about the node." +INVISIBLE T "nuke.message(\"Coming Soon\")" +STARTLINE}
 addUserKnob {22 log l "<a href=\"https://johntothvfx.com\"><span style=\"color:#B0A45D\">Version Log</a>\n" t "Contains information about the node with version log information." -STARTLINE T "\nversion_number = \"1.0.0\"\ncontext = \"Time\"\nmodified_date = \"25th September 2024\"\ndeveloper = \"John Toth © 2023\"\nsite = \"<a href='https://johntothvfx.com'><span style='color:#BBBBBB'>\"\nlog = \"\"\"\n<br></i><b> v 1.0 </b><i>\n- displays timecode overlay image.\n\"\"\"\nthank_you = \"\"\n\n# Retrieve node name\nname = nuke.thisNode()\['CLASSIFICATION'].getValue()\n\n# Message components\nheader = \"Version Log:\"\ndlm = \"<b>Date Last Modified: </b>\" + modified_date\nspace = \" \"\nenter = \"<br><br>\"\nupper = \"<b>\"\nlower = \"</b>\"\n\n# Formatted message\nmessage = (\n    f\"\{upper\}\{header\}\{enter\}\"\n    f\"Name: \{lower\}\{name\}<br>\"\n    f\"\{upper\}Version Number: \{lower\}\{version_number\}<br>\"\n    f\"\{upper\}Context: \{lower\}\{context\}\{enter\}\"\n    f\"\{dlm\}\{log\}<br>\"\n    #f\"<b>Thank You:</b><br>\{thank_you\}<br>\{enter\}\"\n    f\"\{upper\}\{site\}\{developer\}\{lower\}</span></a>\"\n)\n\n# Display the message\nnuke.message(message)\n"}
}
 BackdropNode {
  inputs 0
  name BackdropNode2
  tile_color 0x22222201
  label "<center>DO NOT TOUCH"
  note_font "Source Code Pro Light"
  note_font_size 35
  note_font_color 0xee453cff
  xpos 4395
  ypos -2131
  border_width 15
  bookmark false
  bdwidth 231
  bdheight 227
  addUserKnob {20 "Backdrop Settings"}
  addUserKnob {3 padding l Padding}
  padding 75
  addUserKnob {22 snap l "Snap to selected nodes" -STARTLINE T "this = nuke.thisNode()\nselNodes = nuke.selectedNodes()\npadding = this.knob('padding').value()\nif len(selNodes)== 0:\n\tpass\nelse:\n\tbdX = min(\[node.xpos() for node in selNodes]) - padding\n\tbdY = min(\[node.ypos() for node in selNodes]) - padding - 60\n\tbdW = max(\[node.xpos() + node.screenWidth() for node in selNodes]) + padding\n\tbdH = max(\[node.ypos() + node.screenHeight() for node in selNodes]) + padding\n\tthis.knob('xpos').setValue(bdX)\n\tthis.knob('ypos').setValue(bdY)\n\tthis.knob('bdwidth').setValue(bdW-bdX)\n\tthis.knob('bdheight').setValue(bdH-bdY)"}
 }
 Input {
  inputs 0
  name Input
  label "\[value number]"
  xpos 4690
  ypos -2128
 }
 Dot {
  name Dot1
  note_font_size 35
  note_font_color 0xffffff
  xpos 4724
  ypos -2022
 }
set Nee827800 [stack 0]
 Dot {
  name Dot2
  note_font_size 35
  note_font_color 0xffffff
  xpos 4834
  ypos -2022
 }
 Remove {
  name Remove1
  label "\[if \{ \[lsearch \"rgb rgba\"  \[value channels]] != -1 \} \{ return \"(\[value channels])\n\" \} else \{ return \"\"\}]\[if \{ \[value channels2] != \"none\"\} \{return \"(\[value channels2])\"\} else \{return \" \"\}]\[if \{ \[value channels3] != \"none\"\} \{return \"\n(\[value channels3])\"\} else \{return \" \"\}]\[if \{ \[value channels4] != \"none\"\} \{return \"\n(\[value channels4])\"\} else \{return \" \"\}]"
  xpos 4800
  ypos -1984
 }
 CopyBBox {
  name CopyBBox1
  xpos 4800
  ypos -1930
 }
 Text {
  message "\[format %02d \[value displayHours]] : \[format %02d \[value displayMinutes]] : \[format %02d \[value displaySeconds]] \[expr \{\[numvalue parent.displayFrame]  ? \": \[format %02d \[value displayFrame]]\" : \"\" \} ] "
  Font 0
  font "\[value parent.font]"
  size {{"parent.autoFontSize == 0 ? parent.fontSize : Input.width / 50"}}
  xjustify {{parent.xjustify}}
  yjustify {{parent.yjustify+1}}
  box {{"parent.autoMargin == 1 ? ((Input.width * (parent.safeZone == 0 ? 11 :  6)) / 100 ) : parent.margin\n"} {"parent.autoMargin == 1 ? ((Input.height * (parent.safeZone == 0 ? 11 :  6)) / 100 ) : parent.margin\n"} {"parent.autoMargin == 1 ? Input.width - ((Input.width * (parent.safeZone == 0 ? 11 :  6)) / 100 ) : Input.width - (parent.margin)\n"} {"parent.autoMargin == 1 ? Input.height - ((Input.height * (parent.safeZone == 0 ? 11 :  6)) / 100 ) : Input.height - (parent.margin)\n"}}
  translate {0 {"parent.nanCheck && parent.infCheck  && parent.negCheck == 1 ? \nparent.yjustify == 0 ? - (size) : \nparent.yjustify == 1 ? 0 : \n(size) :  \n\nparent.nanCheck && parent.infCheck == 1 ?\nparent.yjustify == 0 ? - (size)   : \nparent.yjustify == 1 ? -((size) / 2) : \n0 : \n\nparent.infCheck && parent.negCheck == 1 ?\nparent.yjustify == 0 ? 0  : \nparent.yjustify == 1 ? ((size) / 2)  : \n(size)  : \n\nparent.infCheck == 1 ? 0  : 0\n\n\n"}}
  color {{parent.color.r} {parent.color.g} {parent.color.b} 1}
  name TimeCode
  label "\[basename \[value font]]"
  xpos 4800
  ypos -1864
  addUserKnob {20 time l Time}
  addUserKnob {3 totalSeconds l "total seconds"}
  totalSeconds {{"t - parent.startFrame + parent.seconds + ((parent.minutes + (parent.hours * 60)) * 60)"}}
  addUserKnob {3 displayHours l "display hours"}
  displayHours {{"int(totalSeconds / 60 / 60)"}}
  addUserKnob {3 displayMinutes l "display minutes"}
  displayMinutes {{"int((totalSeconds - int(displayHours * 60 * 60)) / 60)"}}
  addUserKnob {3 displaySeconds l "display seconds"}
  displaySeconds {{"totalSeconds - (((displayHours * 60) + displayMinutes) * 60)"}}
  addUserKnob {3 displayFrame l "display frame"}
  displayFrame {{"(frame - parent.startFrame) + parent.frameOffset"}}
 }
 FilterErode {
  channels alpha
  size {{"- (parent.autoBorder == 0 ? parent.border : (Input.width * 0.1) / 100)"}}
  name FilterErode2
  xpos 4800
  ypos -1792
 }
 Dot {
  name Dot3
  note_font_size 35
  note_font_color 0xffffff
  xpos 4834
  ypos -1686
 }
push $Nee827800
 Merge2 {
  inputs 2
  mix {{parent.labelMix}}
  name Merge1
  label "mix: \[value mix] (\[value bbox])"
  xpos 4690
  ypos -1696
 }
 ModifyMetaData {
  metadata {
   {set "\[value prefix]" "\[value TimeCode.message]"}
  }
  name ModifyMetaData1
  xpos 4690
  ypos -1594
  disable {{!parent.Warning.addMetaData}}
 }
 Output {
  name Output
  xpos 4690
  ypos -1530
 }
 NoOp {
  inputs 0
  name Warning
  knobChanged "grp = nuke.thisGroup()\ntk = nuke.thisKnob()\n\n\nif tk.name() == \"autoFontSize\":\n    grp.knob('fontSize').setEnabled(not grp.knob('fontSize'). enabled())\n\nif tk.name() == \"autoMargin\":\n    grp.knob('margin').setEnabled(not grp.knob('margin'). enabled())\n    grp.knob('safeZone').setEnabled(not grp.knob('safeZone'). enabled())\n    \nif tk.name() == \"autoBorder\":\n    grp.knob('border').setEnabled(not grp.knob('border'). enabled())\n\nif tk.name() == \"displayFrame\":\n    grp.knob('frameOffset').setEnabled(not grp.knob('frameOffset'). enabled())\n\nif tk.name() == \"addMetaData\":\n    grp.knob('prefix').setEnabled(not grp.knob('prefix'). enabled())"
  label callback
  xpos 4470
  ypos -2008
  addUserKnob {20 warning}
  addUserKnob {6 autoMargin l "auto margin" +STARTLINE}
  autoMargin true
  addUserKnob {6 autoFontSize l "auto size" +STARTLINE}
  autoFontSize true
  addUserKnob {6 autoBorder l "auto border" +STARTLINE}
  autoBorder true
  addUserKnob {6 addMetaData l "add timecode to metadata" +STARTLINE}
  addUserKnob {6 displayFrame l "add frame" +STARTLINE}
 }
end_group
